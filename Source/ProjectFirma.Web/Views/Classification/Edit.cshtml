@*-----------------------------------------------------------------------
<copyright file="Edit.cshtml" company="Tahoe Regional Planning Agency and Environmental Science Associates">
Copyright (c) Tahoe Regional Planning Agency and Environmental Science Associates. All rights reserved.
<author>Environmental Science Associates</author>
</copyright>

<license>
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

Source code is available upon request via <support@sitkatech.com>.
</license>
-----------------------------------------------------------------------*@
@using LtInfo.Common.HtmlHelperExtensions
@using LtInfo.Common.Mvc
@using ProjectFirma.Web.Common
@using ProjectFirma.Web.Models
@inherits ProjectFirma.Web.Views.Classification.Edit

<link href="@Url.Content("~/Content/bootstrap-colorpicker/css/bootstrap-colorpicker.min.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Content/bootstrap-colorpicker/js/bootstrap-colorpicker.min.js")" type="text/javascript"></script>

    <style>
        .classification-current-image {
            position: relative;
            display: inline-block;
        }
        .classification-current-image img {
            max-height: 250px;
        }
        .classification-current-image:hover button {
            opacity: .75;
        }
        .classification-current-image button {
            position: absolute;
            top: 10px;
            right: 10px;
            width: 30px;
            height: 30px;
            background: #000;
            border: none;
            opacity: .5;
            transition: all .3s;
            border-radius: 50%;
        }
        .classification-current-image button:hover {
            opacity: 1;
        }
        .classification-current-image button .glyphicon {
            color: #fff;
        }
    </style>

@using (Html.BeginForm())
{
    <div class="form-horizontal">
        <div class="form-group">
            <div class="col-sm-3 control-label">
                @Html.LabelWithSugarFor(m => m.DisplayName)
            </div>
            <div class="col-sm-9">
                @Html.TextBoxFor(m => m.DisplayName, new { style = "width:100%", @class = "form-control" })
                @Html.ValidationMessageFor(m => m.DisplayName)
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-3 control-label">
                @Html.LabelWithSugarFor(m => m.ClassificationDescription)
            </div>
            <div class="col-sm-9">
                @Html.TextAreaWithMaxLengthFor(m => m.ClassificationDescription, new TextAreaForExtensions.TextAreaDimensions(null, 3), null, new List<string> { "form-control" })
                @Html.ValidationMessageFor(m => m.ClassificationDescription)
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-3 control-label">
                @Html.LabelWithSugarFor(m => m.GoalStatement)
            </div>
            <div class="col-sm-9">
                @Html.TextAreaWithMaxLengthFor(m => m.GoalStatement, new TextAreaForExtensions.TextAreaDimensions(null, 2), null, new List<string> { "form-control" })
                @Html.ValidationMessageFor(m => m.GoalStatement)
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-3 control-label">
                @Html.LabelWithSugarFor(x => x.KeyImageFileResourceData)
            </div>
            <div class="col-sm-9">
                @if (ViewDataTyped.HasClassificationKeyImageFileResourceInfo)
                {
                    <div class="classification-current-image-wrapper">
                        <div class="classification-current-image">
                            <button type="button" title="Remove image" onclick="removeImage()">
                                <span class="glyphicon glyphicon-remove"></span>
                            </button>
                            <img src="@ViewDataTyped.Classification.GetKeyImageUrlLarge()" />
                        </div>
                    </div>
                }
                <div class="classification-image-upload-wrapper" style="display:@( (ViewDataTyped.HasClassificationKeyImageFileResourceInfo) ? "none" : "block" );">
                    @Html.EditorFor(x => x.KeyImageFileResourceData)
                    <span class="smallExplanationText">
                        Allowed Extensions: @Model.GetFileExtensions(x => x.KeyImageFileResourceData)
                    </span>
                </div>
                @Html.ValidationMessageFor(x => x.KeyImageFileResourceData)
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-3 control-label">
                @Html.LabelWithSugarFor(x => x.ThemeColor)
            </div>
            <div class="col-sm-9">
                <div id="themeColorPicker" class="input-group colorpicker-component">
                    @Html.TextBoxFor(x => x.ThemeColor, new { @class = "form-control" })
                    <span class="input-group-addon"><i></i></span>
                    @Html.ValidationMessageFor(x => x.ThemeColor)
                </div>
            </div>
        </div>
    </div>
    @Html.HiddenFor(m => m.ClassificationID)
    @Html.HiddenFor(m => m.DeleteCurrentKeyImage)
}

<script type="text/javascript">
    jQuery(function() {
        jQuery("#themeColorPicker").colorpicker();
    });

    function removeImage() {
        var replaceImageHiddenInput = jQuery("#@Html.NameFor(m => m.DeleteCurrentKeyImage)")
        var currentImageWrapper = jQuery('.classification-current-image-wrapper')
        var uploadImageWrapper = jQuery('.classification-image-upload-wrapper')
        replaceImageHiddenInput.val(true)
        currentImageWrapper.hide()
        uploadImageWrapper.show()
    }
</script>