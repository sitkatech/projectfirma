@*-----------------------------------------------------------------------
    <copyright file="EditBasics.cshtml" company="Tahoe Regional Planning Agency and Environmental Science Associates">
    Copyright (c) Tahoe Regional Planning Agency and Environmental Science Associates. All rights reserved.
    <author>Environmental Science Associates</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@
@using LtInfo.Common.HtmlHelperExtensions
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@using ProjectFirma.Web.Common
@using ProjectFirma.Web.Views.Tenant
@using ProjectFirmaModels.Models
@inherits EditBasics

<style>
    select.form-control option:disabled {
        color: #bbb;
    }

    .costTypeBox {
        background-color: white;
    }

    .addNewCostType {
        margin-top: 25px;
    }

    .costTypesContainer, .costTypeDeleteWarning {
        margin: 25px;
    }

    .panelSectionLabel {
        margin-top: 25px;
        font-size: calc(100% + 4px);
    }

</style>
<style type="text/css" media="only screen and (min-width: 992px)">
    .taxonomyWarning {
        margin-left: -40px;
    }
</style>

<script type="text/javascript">
    // <![CDATA[
    jQuery(function() {
        angular.module("ProjectFirmaApp")
            .factory("angularModelAndViewData",
                function()
                {
                    return {
                        AngularViewData: @Html.Raw(JObject.FromObject(ViewDataTyped.ViewDataForAngular).ToString(Formatting.None))
                    };
                });
        angular.bootstrap(jQuery("[ng-controller=\"EditBudgetTypeController\"]"), ["ProjectFirmaApp"]);
    });
    // ]]>
</script>

@using (Html.BeginForm())
{
    <div class="form-horizontal">
        @Html.HiddenFor(m => m.TenantID)
        @* Tenant Details section *@
        <div class="panelSectionLabel">Tenant Details</div>
        <div class="form-group">
            <div class="col-md-4 text-right">@Html.LabelWithSugarFor(m => m.TenantShortDisplayName, "Tenant Short Display<br/>Name", true)</div>
            <div class="col-md-8">
                @Html.TextBoxFor(m => m.TenantShortDisplayName, new {@class = "form-control"})
                @Html.ValidationMessageFor(x => x.TenantShortDisplayName)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 text-right">@Html.LabelWithSugarFor(m => m.ToolDisplayName)</div>
            <div class="col-md-8">
                @Html.TextBoxFor(m => m.ToolDisplayName, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.ToolDisplayName)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 text-right">@Html.LabelWithSugarFor(m => m.GeoServerNamespace)</div>
            <div class="col-md-8">
                @Html.TextBoxFor(x => x.GeoServerNamespace, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.GeoServerNamespace)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 text-right">@Html.LabelWithSugarFor(m => m.GoogleAnalyticsTrackingCode)</div>
            <div class="col-md-8">
                @Html.TextBoxFor(x => x.GoogleAnalyticsTrackingCode, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.GoogleAnalyticsTrackingCode)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 text-right">@Html.LabelFor(m => m.PrimaryContactPersonID)</div>
            <div class="col-md-8">
                @Html.SearchableDropDownListFor(m => m.PrimaryContactPersonID, ViewDataTyped.TenantPeople)
                @Html.ValidationMessageFor(x => x.PrimaryContactPersonID)
            </div>
        </div>
        
        @* Site Basics section *@
        <div class="panelSectionLabel">Site Basics</div>
        <div class="row">
            <div class="col-md-8">
                <div class="form-group">
                    <div class="col-md-6 text-right">@Html.LabelFor(m => m.TaxonomyLevelID)</div>
                    <div class="col-md-6">
                        @Html.DropDownListFor(x => x.TaxonomyLevelID, ViewDataTyped.TaxonomyLevels, new { @class = "form-control", style = "width:auto;" })
                        @Html.ValidationMessageFor(m => m.TaxonomyLevelID)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-6 text-right">@Html.LabelFor(m => m.AssociatePerfomanceMeasureTaxonomyLevelID)</div>
                    <div class="col-md-6">
                        @Html.DropDownListFor(x => x.AssociatePerfomanceMeasureTaxonomyLevelID, ViewDataTyped.TaxonomyLevels, new { @class = "form-control", style = "width:auto;" })
                        @Html.ValidationMessageFor(m => m.AssociatePerfomanceMeasureTaxonomyLevelID)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-6 text-right">@Html.LabelWithSugarFor(m => m.EnableSecondaryProjectTaxonomyLeaf)</div>
                    <div class="col-md-6">
                        @Html.CheckBoxFor(x => x.EnableSecondaryProjectTaxonomyLeaf)
                        @Html.ValidationMessageFor(x => x.EnableSecondaryProjectTaxonomyLeaf)
                    </div>
                </div>
            </div>
            <div class="col-md-4 taxonomyWarning" style="margin-top: 20px; margin-bottom: 20px">
                <span class="smallExplanationText">Changing the number of Taxonomy Tiers or which Taxonomy Tier to associate Performance Measures to will result in the deletion of any relationships to Performance Measures</span>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-4 text-right">@Html.LabelFor(m => m.MinimumYear)</div>
            <div class="col-md-8">
                @Html.TextBoxFor(m => m.MinimumYear, new { type = "number", @class = "form-control", style = "width: auto;" })
                @Html.ValidationMessageFor(m => m.MinimumYear)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-4 text-right">@Html.LabelWithSugarFor(m => m.ShowProposalsToThePublic)</div>
            <div class="col-md-8">
                <label class="radio-inline">
                    @Html.RadioButtonFor(m => m.ShowProposalsToThePublic, true) Yes
                </label>
                <label class="radio-inline">
                    @Html.RadioButtonFor(m => m.ShowProposalsToThePublic, false) No
                </label>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 text-right">@Html.LabelFor(m => m.ProjectExternalDataSourceEnabled)</div>
            <div class="col-md-8">
                <div>
                    <label class="radio-inline">
                        @Html.RadioButtonFor(m => m.ProjectExternalDataSourceEnabled, true) Yes
                    </label>
                    <label class="radio-inline">
                        @Html.RadioButtonFor(m => m.ProjectExternalDataSourceEnabled, false) No
                    </label>
                </div>
                @Html.ValidationMessageFor(m => m.ProjectExternalDataSourceEnabled)
            </div>
        </div>
        
        @* Financials section *@
        <div class="panelSectionLabel">Financials</div>
        <div class="form-group">
            <div class="col-md-4 text-right">@Html.LabelWithSugarFor(m => m.ReportFinancialsAtProjectLevel)</div>
            <div class="col-md-8">
                @Html.CheckBoxFor(x => x.ReportFinancialsAtProjectLevel)
                @Html.ValidationMessageFor(x => x.ReportFinancialsAtProjectLevel)
            </div>
        </div>
        <div ng-app="ProjectFirmaApp" ng-controller="EditBudgetTypeController" ng-cloak>
            <div class="form-group">
                <div class="col-md-4 text-right">@Html.LabelWithSugarFor(m => m.BudgetTypeID)</div>
                <div class="col-md-8">
                    <select class="form-control"
                            style="width: auto"
                            id="BudgetTypeID"
                            name="BudgetTypeID"
                            ng-model="model.selectedBudgetTypeID"
                            ng-required="true">
                        <option value="">&lt;Choose one&gt;</option>
                        <option ng-repeat="budgetType in AngularViewData.BudgetTypes"
                                ng-selected="isSelected(budgetType)"
                                ng-disabled="isDisabled(budgetType)"
                                ng-value="getBudgetTypeID(budgetType)">
                            {{budgetType}}
                        </option>
                    </select>
                </div>
                @Html.ValidationMessageFor(x => x.BudgetTypeID)
            </div>
            @* Enter Cost Types if required based on selected Budget Type *@
            <div ng-if="budgetTypeRequiresCostTypes()">
                <div class="col-md-4 text-right">@Html.LabelWithSugarFor(m => m.CostTypes) <sup><span class="requiredFieldIcon glyphicon glyphicon-flash" style="color: #800020; font-size: 8px;"></span></sup></div>
                <div class="col-md-8 costTypesExplanatoryText">You have opted to use cost types when budgeting projects.  Please define the Cost Types you would like to use, they will be available to all projects regardless of project type.</div>

                <div class="col-md-12 addNewCostType">
                    <div class="col-md-4"></div>
                    <div class="col-md-8 input-group input-group-small">
                        <input class="form-control" type="text" placeholder="Enter a Cost Type" ng-model="model.enteredCostType" />
                        <div class="input-group-btn">
                            <a class="btn btn-firma" ng-click="addCostType()">
                                <span class="glyphicon glyphicon-plus"></span><span style="margin: 0 10px;">Add</span>
                            </a>
                        </div>
                    </div>
                </div>

                <div class="col-md-12 costTypesContainer">
                    <div ng-repeat="costType in model.costTypes track by $index" style="margin-bottom: 4px" class="col-xs-12 col-sm-4 costTypeBox">
                        <div class="input-group input-group-sm">
                            <input class="form-control"
                                   type="text"
                                   value="{{costType}}"
                                   disabled />
                            <div class="input-group-btn">
                                <a class="btn btn-firma" ng-click="removeCostType(costType)"><span class="glyphicon glyphicon-remove"></span></a>
                            </div>
                        </div>
                        @* Hidden form element since disabled inputs are not submitted *@
                        <input type="hidden" name="@Html.NameFor(x => x.CostTypes[0]).ToString().Replace("0", "{{$index}}")" value="{{costType}}" />
                    </div>
                </div>
                <div ng-if="willDeleteCostType()" class="costTypeDeleteWarning">
                    <div class="col-md-4"></div>
                    <div class="col-md-8 alert-warning">
                        You are deleting an existing Cost Type. <br />
                        <strong>PLEASE NOTE:</strong> If you delete Cost Types, all data stored by those cost types will be deleted as well.
                    </div>

                </div>

            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 text-right">@Html.LabelWithSugarFor(m => m.ExcludeTargetedFundingOrganizations)</div>
            <div class="col-md-8">
                @Html.CheckBoxFor(x => x.ExcludeTargetedFundingOrganizations)
                @Html.ValidationMessageFor(x => x.ExcludeTargetedFundingOrganizations)
            </div>
        </div>

        @* Accomplishments section *@
        <div class="panelSectionLabel">Accomplishments</div>
        <div class="form-group">
            <div class="col-md-4 text-right">@Html.LabelWithSugarFor(m => m.TrackAccomplishments)</div>
            <div class="col-md-8">
                @Html.CheckBoxFor(x => x.TrackAccomplishments)
                @Html.ValidationMessageFor(x => x.TrackAccomplishments)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 text-right">@Html.LabelWithSugarFor(m => m.EnableAccomplishmentsDashboard)</div>
            <div class="col-md-8">
                @Html.CheckBoxFor(x => x.EnableAccomplishmentsDashboard)
                @Html.ValidationMessageFor(x => x.EnableAccomplishmentsDashboard)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 text-right">@Html.LabelWithSugarFor(m => m.EnableSimpleAccomplishmentsDashboard)</div>
            <div class="col-md-8">
                @Html.CheckBoxFor(x => x.EnableSimpleAccomplishmentsDashboard)
                @Html.ValidationMessageFor(x => x.EnableSimpleAccomplishmentsDashboard)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 text-right">@Html.LabelWithSugarFor(m => m.SetTargetsByGeospatialArea)</div>
            <div class="col-md-8">
                @Html.CheckBoxFor(x => x.SetTargetsByGeospatialArea)
                @Html.ValidationMessageFor(x => x.SetTargetsByGeospatialArea)
            </div>
        </div>
        
        @* Optional Features section *@
        <div class="panelSectionLabel">Optional Features</div>
        <div class="form-group">
            <div class="col-md-4 text-right">@Html.LabelWithSugarFor(m => m.CanManageCustomAttributes)</div>
            <div class="col-md-8">
                @Html.CheckBoxFor(x => x.CanManageCustomAttributes)
                @Html.ValidationMessageFor(x => x.CanManageCustomAttributes)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 text-right">@Html.LabelWithSugarFor(m => m.EnableProjectCategories)</div>
            <div class="col-md-8">
                @if (ViewDataTyped.CanEditEnableProjectCategoriesCheckbox)
                {
                    @Html.CheckBoxFor(x => x.EnableProjectCategories)
                }
                else
                {
                    @Html.CheckBoxFor(x => x.EnableProjectCategories, new { @checked = "checked", disabled = "disabled" })
                    <span class="systemText">You cannot edit this because there are projects in the database of a type other than @ProjectCategoryEnum.Normal</span>
                }

                @Html.ValidationMessageFor(x => x.EnableProjectCategories)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 text-right">@Html.LabelWithSugarFor(m => m.EnableProjectEvaluations)</div>
            <div class="col-md-8">
                @Html.CheckBoxFor(x => x.EnableProjectEvaluations)
                @Html.ValidationMessageFor(x => x.EnableProjectEvaluations)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 text-right">@Html.LabelWithSugarFor(m => m.UseProjectTimeline)</div>
            <div class="col-md-8">
                @Html.CheckBoxFor(x => x.UseProjectTimeline)
                @Html.ValidationMessageFor(x => x.UseProjectTimeline)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 text-right">@Html.LabelWithSugarFor(m => m.EnableMatchmaker)</div>
            <div class="col-md-8">
                @Html.CheckBoxFor(x => x.EnableMatchmaker)
                @Html.ValidationMessageFor(x => x.EnableMatchmaker)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 text-right">@Html.LabelWithSugarFor(m => m.EnableReports)</div>
            <div class="col-md-8">
                @Html.CheckBoxFor(x => x.EnableReports)
                @Html.ValidationMessageFor(x => x.EnableReports)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 text-right">@Html.LabelWithSugarFor(m => m.EnableSolicitations)</div>
            <div class="col-md-8">
                @Html.CheckBoxFor(x => x.EnableSolicitations)
                @Html.ValidationMessageFor(x => x.EnableSolicitations)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4 text-right">@Html.LabelWithSugarFor(m => m.EnableStatusUpdates)</div>
            <div class="col-md-8">
                @Html.CheckBoxFor(x => x.EnableStatusUpdates)
                @Html.ValidationMessageFor(x => x.EnableStatusUpdates)
            </div>
        </div>
    </div>

}

<script type="text/javascript">
    // <![CDATA[

    jQuery(function() {

        var trackAccomplishmentsCheckbox = jQuery("#@Html.IdFor(x => x.TrackAccomplishments)");
        var enableAccomplishmentsDashboardCheckbox = jQuery("#@Html.IdFor(x => x.EnableAccomplishmentsDashboard)");
        var associatePerformanceMeasureTaxonomyLevelDropdown = jQuery("#@Html.IdFor(x => x.AssociatePerfomanceMeasureTaxonomyLevelID)");

        //Set default display
        if (!trackAccomplishmentsCheckbox.prop("checked")) {
            enableAccomplishmentsDashboardCheckbox.attr("disabled", "disabled");
            enableAccomplishmentsDashboardCheckbox.prop("checked", false);
            enableAccomplishmentsDashboardCheckbox.attr("title", "Disabled because Track Accomplishments is not selected.");
            associatePerformanceMeasureTaxonomyLevelDropdown.attr("disabled", "disabled");
            associatePerformanceMeasureTaxonomyLevelDropdown.attr("title", "Disabled because Track Accomplishments is not selected.");
        }

        jQuery(trackAccomplishmentsCheckbox).on("change",function () {
            var enableAccomplishmentsDashboardCheckboxForCheckboxFunction = jQuery("#@Html.IdFor(x => x.EnableAccomplishmentsDashboard)");
            var associatePerformanceMeasureTaxonomyLevelDropdownForCheckboxFunction = jQuery("#@Html.IdFor(x => x.AssociatePerfomanceMeasureTaxonomyLevelID)");

            if (this.checked) {
                enableAccomplishmentsDashboardCheckboxForCheckboxFunction.attr("disabled", false);
                enableAccomplishmentsDashboardCheckboxForCheckboxFunction.attr("title", "");
                associatePerformanceMeasureTaxonomyLevelDropdownForCheckboxFunction.attr("disabled", false);
                associatePerformanceMeasureTaxonomyLevelDropdownForCheckboxFunction.attr("title", "");
            }
            else {
                enableAccomplishmentsDashboardCheckboxForCheckboxFunction.attr("disabled", "disabled");
                enableAccomplishmentsDashboardCheckboxForCheckboxFunction.prop("checked", false);
                enableAccomplishmentsDashboardCheckboxForCheckboxFunction.attr("title", "Disabled because Track Accomplishments is not selected.");
                associatePerformanceMeasureTaxonomyLevelDropdownForCheckboxFunction.attr("disabled", "disabled");
                associatePerformanceMeasureTaxonomyLevelDropdownForCheckboxFunction.attr("title", "Disabled because Track Accomplishments is not selected.");
            }
        });


        //HookupCheckIfFormIsDirty();
    });

    // ]]>
</script>