@*-----------------------------------------------------------------------
    <copyright file="ExpectedPerformanceMeasureValues.cshtml" company="Tahoe Regional Planning Agency and Environmental Science Associates">
    Copyright (c) Tahoe Regional Planning Agency and Environmental Science Associates. All rights reserved.
    <author>Environmental Science Associates</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@
@using LtInfo.Common.ModalDialog
@using Newtonsoft.Json.Linq
@using ProjectFirma.Web.Common
@using ProjectFirma.Web.Models
@using ProjectFirma.Web.Views.ProjectUpdate
@using ProjectFirma.Web.Views.Shared.ProjectUpdateDiffControls
@using ProjectFirmaModels.Models
@inherits ProjectFirma.Web.Views.ProjectUpdate.ExpectedPerformanceMeasures

@section JavascriptAndStylesContent
{
    @if (ViewDataTyped.IsEditable)
    {
        <script type="text/javascript" src="@Url.Content("~/Views/ProjectUpdate/ExpectedPerformanceMeasuresController.js")"></script>
        <script type="text/javascript">
            // <![CDATA[
            angular.module("ProjectFirmaApp").factory("angularModelAndViewData",
                function() {
                    return {
                        AngularModel: @Html.Raw(JObject.FromObject(Model)),
                        AngularViewData: @Html.Raw(JObject.FromObject(ViewDataTyped.ViewDataForAngular))
                    };
                });

            jQuery(".selectpicker").selectpicker("refresh");
            jQuery(".modal").on("hidden.bs.modal",
                function () {
                    jQuery(".bootstrap-select.open").removeClass("open");
                });

            // ]]>
        </script>
    }
}

<div class="row">
    <div class="col-xs-12">
        <p>
            To enter your @FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel()'s anticipated accomplishments:
            <ul>
                <li>Add the appropriate @MultiTenantHelpers.GetPerformanceMeasureNamePluralized() to the list below</li>
                <li>Select Subcategory options for each @MultiTenantHelpers.GetPerformanceMeasureName() in order to more accurately describe the anticipated accomplishment</li>
                <li>Enter the anticipated accomplishment value if known</li>
            </ul>
            Once a @MultiTenantHelpers.GetPerformanceMeasureName() is added, click the <span class="helpicon glyphicon glyphicon-question-sign blue" title="Help"></span>
            icon to view reporting guidance on that @MultiTenantHelpers.GetPerformanceMeasureName().
        </p>
    </div>
</div>

<hr />
@if (!ViewDataTyped.IsEditable)
{
    if (ViewDataTyped.PerformanceMeasureExpectedValuesSummaryViewData.PerformanceMeasureSubcategoriesExpectedValues.Any())
    {
        PerformanceMeasureExpectedValuesSummary.RenderPartialView(Html, ViewDataTyped.PerformanceMeasureExpectedValuesSummaryViewData);
    }
    else
    {
        <p class="systemText">No expected @MultiTenantHelpers.GetPerformanceMeasureName() accomplishments entered for this @(FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel()).</p>
    }
}
else
{
    <div class="row" ng-app="ProjectFirmaApp" ng-controller="ExpectedPerformanceMeasuresController">
        <div class="col-xs-12">
            <div>
                <div class="form-group">
                    <label class="control-label">@MultiTenantHelpers.GetPerformanceMeasureName() to Add:</label>
                    <div class="input-group">
                        <select ng-model="PerformanceMeasureToAdd"
                                class="selectpicker"
                                data-live-search="true"
                                data-container="body"
                                title="Select a @MultiTenantHelpers.GetPerformanceMeasureName()"
                                data-width="100%">
                            <option value="" disabled selected>Select a @MultiTenantHelpers.GetPerformanceMeasureName()</option>
                            <option ng-repeat="performanceMeasure in filteredPerformanceMeasures()"
                                    value="{{performanceMeasure.PerformanceMeasureID}}"
                                    ng-selected="PerformanceMeasureToAdd == performanceMeasure.PerformanceMeasureID"
                                    ng-bind="performanceMeasure.DisplayName"
                                    data-tokens="{{performanceMeasure.DisplayName}}"></option>
                        </select>
                        <span class="input-group-btn">
                            <button class="btn btn-firma" type="button" ng-click="addRow()">
                                <span class="glyphicon glyphicon-plus"></span> Add
                            </button>
                        </span>
                    </div>
                </div>
                <br />
                <div ng-hide="AngularModel.PerformanceMeasureExpecteds.length > 0">
                    <p style="font-style: italic">Use the list above to select your @FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel()'s anticipated accomplishments. @MultiTenantHelpers.GetPerformanceMeasureNamePluralized() will appear here when added.</p>
                </div>

                <table class="table" ng-show="AngularModel.PerformanceMeasureExpecteds.length > 0" ng-repeat="performanceMeasureGroup in groupedPerformanceMeasures()">
                    <thead>
                        <tr>
                            <th colspan="{{numberOfSubcategoryOptions(performanceMeasureGroup) + 3}}">
                                <span class="helpicon glyphicon glyphicon-question-sign blue" title="Click to get more info on this @MultiTenantHelpers.GetPerformanceMeasureName()"
                                      ng-mouseover="performanceMeasureTooltip(performanceMeasureGroup)">
                                </span>
                                <span ng-bind="getPerformanceMeasureName(performanceMeasureGroup)" style="font-weight: bold"></span>
                            </th>
                        </tr>
                        <tr>
                            <th></th>
                            <th ng-show="getPerformanceMeasure(performanceMeasureGroup.PerformanceMeasureID).HasRealSubcategories" ng-repeat="performanceMeasureExpectedSubcategoryOption in performanceMeasureGroup.PerformanceMeasureExpectedSubcategoryOptions | orderBy:[getSubcategoryName]">{{getSubcategoryName(performanceMeasureExpectedSubcategoryOption)}}</th>
                            <th>Value</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr ng-repeat="performanceMeasureExpected in getGroupPerformanceMeasureExpecteds(performanceMeasureGroup)">
                            <td style="width: 50px">
                                <span class="glyphicon glyphicon-trash" title="Remove row" alt="Remove row" ng-click="deleteRow(performanceMeasureExpected)" style="cursor: pointer"></span>
                            </td>
                            <td ng-show="getPerformanceMeasure(performanceMeasureExpected.PerformanceMeasureID).HasRealSubcategories" ng-repeat="performanceMeasureExpectedSubcategoryOption in performanceMeasureExpected.PerformanceMeasureExpectedSubcategoryOptions | orderBy:[getSubcategoryName]">
                                <select class="form-control"
                                        ng-model="performanceMeasureExpectedSubcategoryOption.PerformanceMeasureSubcategoryOptionID">
                                    <option ng-repeat="performanceMeasureSubcategoryOption in getSubcategoryOptionsForSubcategory(performanceMeasureExpectedSubcategoryOption.PerformanceMeasureSubcategoryID)"
                                            value="{{performanceMeasureSubcategoryOption.PerformanceMeasureSubcategoryOptionID}}"
                                            ng-selected="performanceMeasureExpectedSubcategoryOption.PerformanceMeasureSubcategoryOptionID == performanceMeasureSubcategoryOption.PerformanceMeasureSubcategoryOptionID">
                                        {{performanceMeasureSubcategoryOption.PerformanceMeasureSubcategoryOptionName}}
                                    </option>
                                </select>
                            </td>
                            <td style="width: 100px">
                                <input class="form-control" style="text-align: right"
                                       ng-model="performanceMeasureExpected.ExpectedValue" ng-number/>
                            </td>
                            <td style="vertical-align: middle; padding-left: 0">
                                {{getMeasurementUnitTypeDisplayName(performanceMeasureExpected)}}
                            </td>
                        </tr>
                        <tr>
                            <td colspan="{{numberOfSubcategoryOptions(performanceMeasureGroup) + 3}}" class="text-right">
                                <button class="btn btn-xs btn-firma" type="button" ng-click="addPerformanceMeasureToGroup(performanceMeasureGroup)">
                                    <span class="glyphicon glyphicon-plus"></span> Add a Row
                                </button>
                            </td>
                        </tr>
                    </tbody>
                </table>

                <hr />
            </div>

        </div>
        @using (Html.BeginForm())
        {
            <div ng-repeat="performanceMeasureExpected in AngularModel.PerformanceMeasureExpecteds | orderBy:'PerformanceMeasureID'">
                <input type="hidden" name="@Html.NameFor(x => x.PerformanceMeasureExpecteds[0].PerformanceMeasureID).ToString().Replace("0", "{{$index}}")" value="{{performanceMeasureExpected.PerformanceMeasureID}}">
                <input type="hidden" name="@Html.NameFor(x => x.PerformanceMeasureExpecteds[0].ExpectedValue).ToString().Replace("0", "{{$index}}")" value="{{performanceMeasureExpected.ExpectedValue}}">
                <div ng-repeat="performanceMeasureExpectedSubcategoryOption in getPerformanceMeasureExpectedSubcategoryOptionsWithValues(performanceMeasureExpected)">
                    <input type="hidden" name="@Html.NameFor(x => x.PerformanceMeasureExpecteds[0].PerformanceMeasureExpectedSubcategoryOptions[1].PerformanceMeasureSubcategoryOptionID).ToString().Replace("0", "{{$parent.$index}}").Replace("1", "{{$index}}")" value="{{performanceMeasureExpectedSubcategoryOption.PerformanceMeasureSubcategoryOptionID}}">
                    <input type="hidden" name="@Html.NameFor(x => x.PerformanceMeasureExpecteds[0].PerformanceMeasureExpectedSubcategoryOptions[1].PerformanceMeasureSubcategoryID).ToString().Replace("0", "{{$parent.$index}}").Replace("1", "{{$index}}")" value="{{performanceMeasureExpectedSubcategoryOption.PerformanceMeasureSubcategoryID}}">
                    <input type="hidden" name="@Html.NameFor(x => x.PerformanceMeasureExpecteds[0].PerformanceMeasureExpectedSubcategoryOptions[1].PerformanceMeasureID).ToString().Replace("0", "{{$parent.$index}}").Replace("1", "{{$index}}")" value="{{performanceMeasureExpectedSubcategoryOption.PerformanceMeasureID}}">
                </div>
            </div>
            if (ViewDataTyped.ShowApproveAndReturnButton)
            {
                <hr/>
                <div class="row form-group">
                    <div class="col-md-3">@Html.LabelWithSugarFor(x => x.Comments)</div>
                    <div class="col-md-9">
                        @Html.TextAreaFor(x => x.Comments, new Dictionary<string, object> {{"style", "width: 100%"}, {"class", "form-control"}})
                    </div>
                </div>
            }
            <hr/>
            SectionComments.RenderPartialView(Html, ViewDataTyped.SectionCommentsViewData);

            <div class="row">
                <div class="col-xs-6">
                    @ModalDialogFormHelper.ModalDialogFormLink("revert-button", "Revert Current Page", ViewDataTyped.RefreshUrl, "Refresh this section", 500, "Continue", "Continue", "Cancel", new List<string> {"btn btn-xs btn-firma"}, null, null, null, "Undo all changes on this page")
                    @if (ViewDataTyped.ProjectUpdateStatus.IsExpectedPerformanceMeasuresUpdated)
                    {
                        @ModalDialogFormHelper.ModalDialogFormLink("diff-link-id", "Show Changes", ViewDataTyped.DiffUrl, string.Format("Changes to {0}", MultiTenantHelpers.GetPerformanceMeasureNamePluralized()), 800, "hidden-save-button", string.Empty, "Close", new List<string> {"btn btn-xs btn-firma"}, null, null, null)
                    }
                </div>
                <div class="pull-right">
                    <button type="submit" class="btn btn-xs btn-firma" title="Save changes made on this page" value="false" name="@Html.NameFor(x => x.AutoAdvance)" ng-disabled="pmForm.$invalid">Save</button>
                    <button type="submit" class="btn btn-xs btn-firma" title="Save changes and continue to next page" value="true" name="@Html.NameFor(x => x.AutoAdvance)" ng-disabled="pmForm.$invalid">Save &amp; Continue<span class='glyphicon glyphicon-chevron-right'></span></button>
                </div>
            </div>
        }
    </div>

    <script type="text/javascript">
        //<![CDATA[
        jQuery(function() { HookupCheckIfFormIsDirty(undefined, ".submitProject"); });
        // ]]>
    </script>
}
