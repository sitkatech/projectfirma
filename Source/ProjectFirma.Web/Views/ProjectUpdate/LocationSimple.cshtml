@*-----------------------------------------------------------------------
<copyright file="LocationSimple.cshtml" company="Tahoe Regional Planning Agency and Environmental Science Associates">
Copyright (c) Tahoe Regional Planning Agency and Environmental Science Associates. All rights reserved.
<author>Environmental Science Associates</author>
</copyright>

<license>
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

Source code is available upon request via <support@sitkatech.com>.
</license>
-----------------------------------------------------------------------*@
@using LtInfo.Common.HtmlHelperExtensions
@using ProjectFirma.Web.Views.ProjectUpdate
@using ProjectFirma.Web.Views.Shared.ProjectLocationControls
@using ProjectFirma.Web.Views.Shared
@using LtInfo.Common.ModalDialog
@using ProjectFirma.Web.Common
@inherits LocationSimple

@section JavascriptAndStylesContent
{    
    @{ MapJavascriptIncludes.RenderPartialView(Html); }   
}

@if (!ViewDataTyped.IsEditable)
{
    ProjectLocationSummary.RenderPartialView(Html, ViewDataTyped.ProjectLocationSummaryViewData);
}
else
{    
    ProjectLocationSimple.RenderPartialView(Html, ViewDataTyped.ProjectLocationSimpleViewData, Model);

    if (ViewDataTyped.ShowApproveAndReturnButton)
    {
        <hr />
        <div class="row form-group">
            <div class="col-md-3">@Html.LabelWithSugarFor(x => x.Comments)</div>
            <div class="col-md-9">
                @Html.TextAreaFor(x => x.Comments, new Dictionary<string, object> { { "style", "width: 100%" }, { "class", "form-control" } })
            </div>
        </div>
    }
    <hr />
    SectionComments.RenderPartialView(Html, ViewDataTyped.SectionCommentsViewData);
    <div class="row">
        <div class="col-xs-2">
            @ModalDialogFormHelper.ModalDialogFormLink("revert-button", "Revert Current Page", ViewDataTyped.RefreshUrl, "Refresh this section", 500, "Continue", "Continue", "Cancel", new List<string> { "btn btn-xs btn-firma" }, null, null, null, "Undo all changes on this page")
        </div>
        <div class="pull-right">
            <button class="btn btn-xs btn-firma" title="Save changes made on this page" type="button" onclick="saveForm(false)">Save</button>
            <button class="btn btn-xs btn-firma" title="Save changes and continue to next page" type="button" onclick="saveForm(true)">Save &amp; Continue<span class='glyphicon glyphicon-chevron-right'></span></button>
        </div>         
    </div>

    @*This is intentionally down here because the document ready needs to be after the EditProjectLocation document ready*@
    <script type="text/javascript">
        // <![CDATA[
        jQuery(function() { HookupCheckIfFormIsDirty("#@ViewDataTyped.ProjectLocationSimpleViewData.MapFormID", ".submitProject"); });

        function saveForm(autoAdvance)
        {
            var form = jQuery("#@ViewDataTyped.ProjectLocationSimpleViewData.MapFormID");
            // Do not submit if the form
            // does not pass client side validation

            if (!form.valid())
            {
                return false;
            }

            form.append('<input type="hidden" name="true" value=' + jQuery("#true").is(":checked") + ' />');
            // we need to inject the comments field if we are in "Submitted" state
            @if (ViewDataTyped.ShowApproveAndReturnButton)
            {
                <text>
                    var comments = jQuery("#@Html.IdFor(x => x.Comments)").val();
                    form.append('<input type="hidden" name="@Html.NameFor(x => x.Comments)" value="' + comments + '" />');
                </text>
            }
            form.append('<input type="hidden" name="@Html.NameFor(x => x.AutoAdvance)" value="' + autoAdvance + '" />');
            form.submit();
        }
        // ]]>
    </script>
}
