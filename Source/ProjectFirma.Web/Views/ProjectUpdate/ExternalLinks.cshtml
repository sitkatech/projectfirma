@*-----------------------------------------------------------------------
    <copyright file="ExternalLinks.cshtml" company="Tahoe Regional Planning Agency and Environmental Science Associates">
    Copyright (c) Tahoe Regional Planning Agency and Environmental Science Associates. All rights reserved.
    <author>Environmental Science Associates</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@
@using ProjectFirma.Web.Views.Shared.TextControls
@using LtInfo.Common.ModalDialog
@using Newtonsoft.Json.Linq
@using ProjectFirma.Web.Common
@using ProjectFirma.Web.Models
@using ProjectFirma.Web.Views.ProjectUpdate
@using ProjectFirmaModels.Models
@inherits ProjectFirma.Web.Views.ProjectUpdate.ExternalLinks

<div ng-app="ProjectFirmaApp" ng-controller="ProjectExternalLinkController">
    <div style="min-height: 230px">
        @if (!ViewDataTyped.IsEditable)
        {
            EntityExternalLinks.RenderPartialView(Html, ViewDataTyped.EntityExternalLinksViewData);
        }
        else
        {
            <script src="@Url.Content("~/Views/ProjectExternalLink/ProjectExternalLinkController.js")" type="text/javascript"></script>
            <script type="text/javascript">
                // <![CDATA[
                angular.module("ProjectFirmaApp").factory("angularModelAndViewData", function()
                {
                    return {
                        AngularModel: @Html.Raw(JObject.FromObject(Model)),
                        AngularViewData: @Html.Raw(JObject.FromObject(ViewDataTyped.ViewDataForAngular))
                    };
                });
                // ]]>
            </script>

            <p>
                You may add one or more links to external web pages that further describe this @FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel() or are related to it. URLs must start with "http".
            </p>
            <hr />
            <label>External Link to Add:</label>
            <div class="form-horizontal">
                <div class="row form-group">
                    <div class="col-sm-3" style="text-align: right;">
                        <label>Link Text:</label>
                    </div>
                    <div class="col-sm-9">
                        <input type="text" ng-model="ExternalLinkLabelToAdd" class="form-control" style="width: 100%" />
                    </div>
                </div>
                <div class="row form-group">
                    <div class="col-sm-3" style="text-align: right;">
                        <label>URL:</label>
                    </div>
                    <div class="col-sm-9">
                        <input type="url" ng-model="ExternalLinkUrlToAdd" class="form-control" style="width: 100%" />
                    </div>
                </div>
                <div class="row text-right"><div class="col-sm-12"><button class="btn btn-firma" type="button" ng-click="addRow()" ng-disabled="isAddButtonDisabled()">Add Link</button></div></div>
            </div>
            <br/>
            <table class="table">
                <tr>
                    <th></th>
                    <th>Link Text</th>
                    <th>URL</th>
                </tr>
                <tr ng-repeat="projectExternalLink in AngularModel.ProjectExternalLinks | orderBy:['ExternalLinkLabel']">
                    <td>
                        <span class="glyphicon glyphicon-trash blue" title="Remove row'" alt="Remove row" ng-click="deleteRow(projectExternalLink)" style="cursor: pointer"></span>
                    </td>
                    <td ng-bind="projectExternalLink.ExternalLinkLabel"></td>
                    <td><a href="{{projectExternalLink.ExternalLinkUrl}}" ng-bind="projectExternalLink.ExternalLinkUrl"></a></td>
                </tr>
            </table>
        }
    </div>
    @if (ViewDataTyped.IsEditable)
    {
        using (Html.BeginForm())
        {
            if (ViewDataTyped.ShowApproveAndReturnButton)
            {
                <hr/>
                <div class="row form-group">
                    <div class="col-sm-4 control-label">@Html.LabelWithSugarFor(x => x.Comments)</div>
                    <div class="col-sm-8">
                        @Html.TextAreaFor(x => x.Comments, new {style = "width: 100%", @class = "form-control"})
                    </div>
                </div>
            }
            <hr/>
            SectionComments.RenderPartialView(Html, ViewDataTyped.SectionCommentsViewData);
            <table class="summaryLayout" style="width: 100%">
                <tr>
                    <td>
                        @ModalDialogFormHelper.ModalDialogFormLink("revert-button", "Revert Current Page", ViewDataTyped.RefreshUrl, "Refresh this section", 500, "Continue", "Continue", "Cancel", new List<string> {"btn btn-xs btn-firma"}, null, null, null, "Undo all changes on this page")
                        @if (ViewDataTyped.ProjectUpdateStatus.IsExternalLinksUpdated)
                        {
                            @ModalDialogFormHelper.ModalDialogFormLink("diff-link-id", "Show Changes", ViewDataTyped.DiffUrl, string.Format("Changes to {0} {1}", FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel(), FieldDefinitionEnum.ExternalLinks.ToType().GetFieldDefinitionLabelPluralized()), 800, "hidden-save-button", string.Empty, "Close", new List<string> {"btn btn-xs btn-firma"}, null, null, null)
                        }
                    </td>
                    <td style="text-align: right; white-space: nowrap">

                        <button type="submit" class="btn btn-xs btn-firma" title="Save changes made on this page" value="false" name="@Html.NameFor(x => x.AutoAdvance)">Save</button>
                        <input ng-repeat="projectExternalLink in AngularModel.ProjectExternalLinks" type="hidden" name="@Html.NameFor(x => x.ProjectExternalLinks[0].ProjectID).ToString().Replace("0", "{{$index}}")" value="{{projectExternalLink.ProjectID}}">
                        <input ng-repeat="projectExternalLink in AngularModel.ProjectExternalLinks" type="hidden" name="@Html.NameFor(x => x.ProjectExternalLinks[0].ExternalLinkLabel).ToString().Replace("0", "{{$index}}")" value="{{projectExternalLink.ExternalLinkLabel}}">
                        <input ng-repeat="projectExternalLink in AngularModel.ProjectExternalLinks" type="hidden" name="@Html.NameFor(x => x.ProjectExternalLinks[0].ExternalLinkUrl).ToString().Replace("0", "{{$index}}")" value="{{projectExternalLink.ExternalLinkUrl}}">

                    </td>
                </tr>
            </table>
        }
    }

</div>

<script type="text/javascript">
    //<![CDATA[
    jQuery(function() { HookupCheckIfFormIsDirty(undefined, ".submitProject"); });
    // ]]>
</script>
