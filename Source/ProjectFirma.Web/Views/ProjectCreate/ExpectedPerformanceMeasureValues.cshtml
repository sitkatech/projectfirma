@*-----------------------------------------------------------------------
    <copyright file="ExpectedPerformanceMeasureValues.cshtml" company="Tahoe Regional Planning Agency and Environmental Science Associates">
    Copyright (c) Tahoe Regional Planning Agency and Environmental Science Associates. All rights reserved.
    <author>Environmental Science Associates</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@
@using LtInfo.Common.HtmlHelperExtensions
@using LtInfo.Common.Views
@using ProjectFirma.Web.Common
@using ProjectFirma.Web.Models
@using ProjectFirmaModels.Models
@using ProjectFirma.Web.Views.Shared.PerformanceMeasureControls
@inherits ProjectFirma.Web.Views.ProjectCreate.ExpectedPerformanceMeasureValues

@section JavascriptAndStylesContent
{
    <script type="text/javascript" src="@Url.Content("~/Views/Shared/PerformanceMeasureControls/PerformanceMeasureExpectedController.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Content/Bootstrap-select/bootstrap-select.min.js")"></script>
}

<div class="row">
    <div class="col-xs-12">
        <p>
            To enter your @FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel()'s anticipated accomplishments:
            <ul>
                <li>Add the appropriate @MultiTenantHelpers.GetPerformanceMeasureNamePluralized() to the list below</li>
                <li>Select Subcategory options for each @MultiTenantHelpers.GetPerformanceMeasureName() in order to more accurately describe the anticipated accomplishment</li>
                <li>Enter the anticipated accomplishment value if known</li>
            </ul>
            Once a @MultiTenantHelpers.GetPerformanceMeasureName() is added, click the <span class="helpicon glyphicon glyphicon-question-sign blue" title="Help"></span>
            icon to view reporting guidance on that @MultiTenantHelpers.GetPerformanceMeasureName().
        </p>
        <hr />
    </div>
</div>
<div class="row">
    <div class="col-xs-12">
        @{ Html.RenderRazorSitkaPartial<EditPerformanceMeasureExpected, EditPerformanceMeasureExpectedViewData, EditPerformanceMeasureExpectedViewModel>(ViewDataTyped.EditPerformanceMeasureExpectedViewData, Model); }
    </div>
</div>
<div class="row">
    <div class="col-xs-12">
        <div id="ExplanationForNoMeasuresDiv">
            <p>If no @MultiTenantHelpers.GetPerformanceMeasureNamePluralized() are included, please explain why:</p>
            <div>
                @Html.TextAreaWithMaxLengthFor(m => m.PerformanceMeasureNotes, new TextAreaForExtensions.TextAreaDimensions(null, 2), null, new List<string> { "form-control" })
            </div>
        </div>
    </div>
</div>
@if (@ViewDataTyped.ShowCommentsSection)
{
    <hr />
    <div class="row form-group">
        <div class="col-xs-12 col-sm-4 control-label">
            @Html.LabelFor(m => m.Comments)
        </div>
        <div class="col-xs-12 col-sm-8">
            @if (ViewDataTyped.CanEditComments)
            {
                @Html.TextAreaFor(m => m.Comments, new { style = "width: 100%", @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Comments)
            }
            else
            {
                @Html.Raw(ViewDataTyped.Project.ExpectedAccomplishmentsComment.HtmlEncodeWithBreaks())
            }
        </div>
    </div>
}
<div class="row">
    <div class="col-xs-12">
        <hr />
        <div class="pull-right">
            <button type="button" class="btn btn-xs btn-firma" onclick="saveForm(false)">Save</button>
            <button type="button" class="btn btn-xs btn-firma" onclick="saveForm(true)">Save &amp; Continue<span class='glyphicon glyphicon-chevron-right'></span></button>
        </div>
    </div>
</div>

<script type="text/javascript">
    // <![CDATA[
    jQuery(function () {
        HookupCheckIfFormIsDirty("form", ".submitProject");
    });

    function saveForm(autoAdvance) {
        var form = jQuery("#@ViewDataTyped.EditPerformanceMeasureExpectedViewData.PerformanceMeasureExpectedFormID form");
        // Do not submit if the form
        // does not pass client side validation

        if (!form.valid()) {
            return false;
        }

        @if (ViewDataTyped.CanEditComments)
            {
                <text>
                    var comments = jQuery("#@Html.IdFor(x => x.Comments)").val();
                    form.append('<input type="hidden" name="@Html.NameFor(x => x.Comments)" value="' + comments + '" />');
                </text>
            }

        var noMeasuresDiv = jQuery("#ExplanationForNoMeasuresDiv");
        noMeasuresDiv.appendTo(form);
        jQuery("<input type='hidden' name='@Html.NameFor(x => x.AutoAdvance)' value=" + autoAdvance + " />").appendTo(form);
        form.submit();
        return true;
    }
    // ]]>
</script>