@*-----------------------------------------------------------------------
    <copyright file="Expenditures.cshtml" company="Tahoe Regional Planning Agency and Environmental Science Associates">
    Copyright (c) Tahoe Regional Planning Agency and Environmental Science Associates. All rights reserved.
    <author>Environmental Science Associates</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@
@using LtInfo.Common.Views
@using ProjectFirmaModels.Models
@using ProjectFirma.Web.Views.ProjectCreate
@using Newtonsoft.Json.Linq
@using ProjectFirma.Web.Common
@using ProjectFirma.Web.Models
@inherits Expenditures

@section JavascriptAndStylesContent
{
    <script src="@Url.Content("~/Views/ProjectCreate/ExpendituresController.js")" type="text/javascript"></script>
    <script type="text/javascript">
        // <![CDATA[
        angular.module("ProjectFirmaApp").factory("angularModelAndViewData", function()
        {
            return {
                AngularModel: @Html.Raw(JObject.FromObject(Model)),
                AngularViewData: @Html.Raw(JObject.FromObject(ViewDataTyped.ViewDataForAngular))
            };
        });
        jQuery(function() { HookupCheckIfFormIsDirty(undefined, ".submitProject"); });
        // ]]>
    </script>
    <style>
        .fundingSourceHeaderRow {
            background-color: #d9edf7;
        }
    </style>
}

Enter your @FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel()'s annual expenditures, add the appropriate @FieldDefinitionEnum.FundingSource.ToType().GetFieldDefinitionLabelPluralized() and then 
enter the amount contributed by year. If the @FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel() has no expenditures to report in any year provide an explanation.

<hr />


<div ng-app="ProjectFirmaApp" id="EditFundingSourceExpendituresApp" ng-controller="ExpendituresController">
    <div class="form-group">
        <label>1. Are there expenditures to enter?</label>
        <label style="margin-right: 5px;"><input type="radio" name="@Html.NameFor(x => x.HasExpenditures)" ng-value="true" ng-model="AngularModel.HasExpenditures" /> Yes</label>
        <label><input type="radio" name="@Html.NameFor(x => x.HasExpenditures)" ng-value="false" ng-model="AngularModel.HasExpenditures" /> No</label>
    </div>


    <div ng-show="AngularModel.HasExpenditures">
        <div class="form-group">
            <label class="control-label">2. Identify the @FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel()'s @FieldDefinitionEnum.FundingSource.ToType().GetFieldDefinitionLabelPluralized(). You can add more than one.</label>
            <div class="input-group" style="margin-left: 20px">
                <select ng-model="FundingSourceIDToAdd"
                        class="selectpicker"
                        data-live-search="true"
                        data-container="body"
                        title="Select a @FieldDefinitionEnum.FundingSource.ToType().GetFieldDefinitionLabel() to Add"
                        data-width="100%">
                    <option value="null" disabled selected>Select a @FieldDefinitionEnum.FundingSource.ToType().GetFieldDefinitionLabel() to Add</option>
                    <option ng-repeat="fundingSource in filteredFundingSources()"
                            value="{{fundingSource.FundingSourceID}}"
                            ng-selected="FundingSourceIDToAdd == fundingSource.FundingSourceID"
                            ng-bind="fundingSource.DisplayName"
                            data-tokens="{{fundingSource.DisplayName}}  {{fundingSource.OrganizationFullName}} "></option>
                </select>
                <span class="input-group-btn">
                    <button class="btn btn-firma" type="button" ng-click="addRow()">
                        <span class="glyphicon glyphicon-plus"></span> Add
                    </button>
                </span>
            </div>
            <br />
        </div>
    </div>

    <div ng-show="AngularModel.HasExpenditures" style="margin-bottom: 15px;">
        <div class="form-group">
            <label>3. Enter expenditures for each year and @FieldDefinitionEnum.FundingSource.ToType().GetFieldDefinitionLabel().</label>
        </div>

        <div style="margin-left: 20px; overflow-x: auto">
            <p style="margin-left: 20px" class="systemText" ng-show="getAllUsedFundingSourceIds().length === 0">Add a @FieldDefinitionEnum.FundingSource.ToType().GetFieldDefinitionLabel() to start entering expenditures</p>
            <table class="table-responsive table-condensed table-bordered" style="overflow: auto;" ng-show="getAllUsedFundingSourceIds().length > 0">
                <thead>
                    <tr>
                        <th style="white-space: nowrap" colspan="2">@Html.LabelWithSugarFor(@FieldDefinitionEnum.FundingSource.ToType())</th>
                        <th ng-repeat="calendarYear in getCalendarYearRange()" style="text-align: center;">
                            <span class="glyphicon glyphicon-plus-sign blue pull-left" ng-click="addCalendarYear(calendarYear - 1)" ng-show="$first" title="Add Previous Year {{formatCalendarYear(calendarYear - 1)}}" alt="Add Previous Year {{formatCalendarYear(calendarYear - 1)}}" style="cursor: pointer"></span>
                            <span class="glyphicon glyphicon-minus-sign blue pull-left" ng-click="deleteCalendarYear(calendarYear)" ng-show="$first && canDeleteCalendarYear(calendarYear)" title="Remove {{formatCalendarYear(calendarYear)}}" alt="Remove {{formatCalendarYear(calendarYear)}}" style="cursor: pointer"></span>
                            <span ng-bind="formatCalendarYear(calendarYear)"></span>
                            <span class="glyphicon glyphicon-plus-sign blue pull-right" ng-click="addCalendarYear(calendarYear + 1)" ng-show="$last" title="Add Next Year {{formatCalendarYear(calendarYear + 1)}}" alt="Add Next Year {{formatCalendarYear(calendarYear + 1)}}" style="cursor: pointer"></span>
                            <span class="glyphicon glyphicon-minus-sign blue pull-right" ng-click="deleteCalendarYear(calendarYear)" ng-show="$last && canDeleteCalendarYear(calendarYear)" title="Remove {{formatCalendarYear(calendarYear)}}" alt="Remove {{formatCalendarYear(calendarYear)}}" style="cursor: pointer"></span>
                        </th>
                        <th style="text-align: right">Total</th>
                    </tr>
                </thead>
                <tbody ng-repeat="projectFundingSourceExpenditure in getRelevantProjectFundingSourceExpenditures() | orderBy:[getFundingSourceName, getProjectName]" style="border-top: 2px solid #ddd">
                    <tr class="fundingSourceHeaderRow">
                        <td style="width: 30px; min-width: 30px;"><span class="glyphicon glyphicon-trash blue" title="Remove row" alt="Remove row" ng-click="deleteRow(projectFundingSourceExpenditure)" style="cursor: pointer;"></span></td>
                        <td colspan="{{getCalendarYearRange().length + 2}}"><label class="control-label"><span ng-bind="getFundingSourceName(projectFundingSourceExpenditure)"></span></label></td>
                    </tr>
                    @* Expenditure Entry Rows *@
                    <tr>
                        <td style="width: 30px; min-width: 30px;"></td>
                        <td>Amount</td>
                        <td style="text-align: right;" ng-repeat="calendarYearExpenditure in getRelevantCalendarYearExpenditures(projectFundingSourceExpenditure) | orderBy:'CalendarYear'">
                            <input type="text" ng-model="calendarYearExpenditure.MonetaryAmount" ng-focus="onTextFocus($event)" class="sitkaCurrency form-control" ng-currency />
                        </td>
                        <th style="text-align: right"> {{getExpenditureTotalForRow(projectFundingSourceExpenditure) | currency:"$"}}</th>
                    </tr>
                    @* Sum of expenditures for funding source*@
                    <tr ng-show="getRelevantCostTypes().length > 1">
                        <td style="width: 30px; min-width: 30px;"></td>
                        <th style="white-space: nowrap">
                        </th>
                        <th style="text-align: right;" ng-repeat="calendarYear in getCalendarYearRange()">
                            <span> {{getExpenditureTotalForFundingSourceAndCalendarYear(fundingSourceID, calendarYear) | currency:"$"}}</span>
                        </th>
                        <th style="text-align: right"> {{getExpenditureTotalForFundingSource(fundingSourceID) | currency:"$"}}</th>
                    </tr>
                </tbody>
                <tbody style="border-top: 2px solid #ddd">
                    <tr>
                        <td colspan="2"><label class="control-label">Total Expenditures</label></td>
                        <th ng-repeat="calendarYear in getCalendarYearRange()" style="text-align: right"> {{getExpenditureTotalForCalendarYear(calendarYear) | currency:"$"}}</th>
                        <th style="text-align: right"> {{getExpenditureTotalForCalendarYear() | currency:"$"}}</th>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

    @* <div ng-show="AngularModel.HasExpenditures"> *@
    @*     <div> *@
    @*         <label>3. Enter expenditures for each year and @FieldDefinitionEnum.FundingSource.ToType().GetFieldDefinitionLabel().</label> *@
    @*     </div> *@
    @*     $1$ Scroll container #1# *@
    @*     <div style="overflow: auto; margin-bottom: 40px;"> *@
    @*         <div ng-repeat="projectFundingSourceExpenditure in getRelevantProjectFundingSourceExpenditures() | orderBy:[getFundingSourceName, getProjectName]"> *@
    @*             <span class="glyphicon glyphicon-trash" title="Remove row" alt="Remove row" ng-click="deleteRow(projectFundingSourceExpenditure)" style="cursor: pointer"></span> *@
    @*             <label ng-bind="getFundingSourceName(projectFundingSourceExpenditure)"></label> *@
    @* *@
    @*             <table class="table table-condensed dialogFormLayout" *@
    @*                    style="margin-bottom: 25px; display: block;"> *@
    @*                 <thead> *@
    @*                 <tr style="background-color: #f1f1f1"> *@
    @*                     <th></th> *@
    @*                     <th ng-repeat="calendarYear in getCalendarYearRange()" style="text-align: right; vertical-align: top"> *@
    @*                         <span class="glyphicon glyphicon-plus-sign blue" ng-click="addCalendarYear(calendarYear - 1)" ng-show="$first" title="Add Previous Year '{{calendarYear - 1}}'" alt="Add Previous Year '{{calendarYear + 1}}'" style="cursor: pointer"></span> *@
    @*                         <span class="glyphicon glyphicon-minus-sign blue" ng-click="deleteCalendarYear(calendarYear)" ng-show="$first && canDeleteCalendarYear(calendarYear)" title="Remove '{{calendarYear}}'" alt="Remove '{{calendarYear}}'" style="cursor: pointer"></span> *@
    @*                         <span ng-bind="formatCalendarYear(calendarYear)"></span> *@
    @*                         <span class="glyphicon glyphicon-plus-sign blue" ng-click="addCalendarYear(calendarYear + 1)" ng-show="$last" title="Add Next Year '{{calendarYear - 1}}'" alt="Add Next Year '{{calendarYear - 1}}'" style="cursor: pointer"></span> *@
    @*                         <span class="glyphicon glyphicon-minus-sign blue" ng-click="deleteCalendarYear(calendarYear)" ng-show="$last && canDeleteCalendarYear(calendarYear)" title="Remove '{{calendarYear}}'" alt="Remove '{{calendarYear}}'" style="cursor: pointer"></span> *@
    @*                     </th> *@
    @*                     <th style="text-align: right">Total</th> *@
    @*                 </tr> *@
    @*                 </thead> *@
    @*                 <tbody> *@
    @*                 <tr> *@
    @*                     <td>Amount:</td> *@
    @*                     <td ng-repeat="calendarYearExpenditure in getRelevantCalendarYearExpenditures(projectFundingSourceExpenditure) | orderBy:'CalendarYear'"> *@
    @*                         <input style="text-align: right" type="text" ng-model="calendarYearExpenditure.MonetaryAmount" class="sitkaCurrency form-control" style="width: 96px;" ng-currency ng-focus="onTextFocus($event)" /> *@
    @*                     </td> *@
    @*                     <td style="text-align: right; font-weight: bold;"> *@
    @*                         {{getExpenditureTotalForRow(projectFundingSourceExpenditure) | currency:"$"}} *@
    @*                     </td> *@
    @*                 </tr> *@
    @*                 </tbody> *@
    @*             </table> *@
    @*         </div> *@
    @* *@
    @*         <div ng-show="getRelevantProjectFundingSourceExpenditures().length > 0"> *@
    @*             <label>Total</label> *@
    @*             <table class="table table-condensed dialogFormLayout" style="margin-bottom: 20px; display: block;"> *@
    @*                 <thead> *@
    @*                 <tr> *@
    @*                     <th></th> *@
    @*                     <th ng-repeat="calendarYear in getCalendarYearRange()" style="text-align: right; vertical-align: top"> *@
    @*                         <span class="glyphicon glyphicon-plus-sign blue" ng-click="addCalendarYear(calendarYear - 1)" ng-show="$first" title="Add Previous Year '{{calendarYear - 1}}'" alt="Add Previous Year '{{calendarYear + 1}}'" style="cursor: pointer"></span> *@
    @*                         <span class="glyphicon glyphicon-minus-sign blue" ng-click="deleteCalendarYear(calendarYear)" ng-show="$first && canDeleteCalendarYear(calendarYear)" title="Remove '{{calendarYear}}'" alt="Remove '{{calendarYear}}'" style="cursor: pointer"></span> *@
    @*                         <span ng-bind="formatCalendarYear(calendarYear)"></span> *@
    @*                         <span class="glyphicon glyphicon-plus-sign blue" ng-click="addCalendarYear(calendarYear + 1)" ng-show="$last" title="Add Next Year '{{calendarYear - 1}}'" alt="Add Next Year '{{calendarYear - 1}}'" style="cursor: pointer"></span> *@
    @*                         <span class="glyphicon glyphicon-minus-sign blue" ng-click="deleteCalendarYear(calendarYear)" ng-show="$last && canDeleteCalendarYear(calendarYear)" title="Remove '{{calendarYear}}'" alt="Remove '{{calendarYear}}'" style="cursor: pointer"></span> *@
    @*                     </th> *@
    @*                     <th style="text-align: right">Total</th> *@
    @*                 </tr> *@
    @*                 </thead> *@
    @*                 <tbody> *@
    @*                 <tr style="font-weight: bold;"> *@
    @*                     <td>All @(FieldDefinitionEnum.FundingSource.ToType().GetFieldDefinitionLabel())s:</td> *@
    @*                     <td ng-repeat="calendarYear in getCalendarYearRange()" style="text-align: right"> *@
    @*                         {{getExpenditureTotalForCalendarYear(calendarYear) | currency:"$"}} *@
    @*                     </td> *@
    @*                     <td style="text-align: right"> *@
    @*                         {{getExpenditureTotalForCalendarYear() | currency:"$"}} *@
    @*                     </td> *@
    @*                 </tr> *@
    @*                 </tbody> *@
    @*             </table> *@
    @*         </div> *@
    @*     </div> *@
    @* </div> *@

    <div class="form-group">
        <label><span ng-bind="AngularModel.HasExpenditures ? '4.' : '2.'"></span> Expenditures Notes (required if no expenditures are entered)</label>
        <div style="margin-left: 20px">
            <textarea name="@Html.NameFor(x => x.ExpendituresNote)" placeholder="Expenditures notes" ng-model="AngularModel.ExpendituresNote" class="form-control"></textarea>
        </div>
    </div>


    @using (Html.BeginForm())
    {
        @Html.HiddenFor(x => x.ProjectID)
        <input type="hidden" name="@Html.NameFor(x => x.ExpendituresNote)" value="{{AngularModel.ExpendituresNote}}" />
        <input type="hidden" name="@Html.NameFor(x => x.HasExpenditures)" value="{{AngularModel.HasExpenditures}}" />
        <div ng-repeat="projectFundingSourceExpenditure in getRelevantProjectFundingSourceExpenditures() | orderBy:[getFundingSourceName, getProjectName]" ng-if="AngularModel.HasExpenditures">
            <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceExpenditures[0].ProjectID).ToString().Replace("0", "{{$index}}")" value="@ViewDataTyped.ProjectID" />
            <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceExpenditures[0].FundingSourceID).ToString().Replace("0", "{{$index}}")" value="{{projectFundingSourceExpenditure.FundingSourceID}}" />
            <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceExpenditures[0].IsRelevant).ToString().Replace("0", "{{$index}}")" value="{{projectFundingSourceExpenditure.IsRelevant}}" />
            <div ng-repeat="calendarYearExpenditure in getRelevantCalendarYearExpenditures(projectFundingSourceExpenditure) | orderBy:'CalendarYear'">
                <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceExpenditures[0].CalendarYearExpenditures[1].CalendarYear).ToString().Replace("0", "{{$parent.$index}}").Replace("1", "{{$index}}")" value="{{calendarYearExpenditure.CalendarYear}}" />
                <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceExpenditures[0].CalendarYearExpenditures[1].MonetaryAmount).ToString().Replace("0", "{{$parent.$index}}").Replace("1", "{{$index}}")" value="{{calendarYearExpenditure.MonetaryAmount}}" />
                <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceExpenditures[0].CalendarYearExpenditures[1].IsRelevant).ToString().Replace("0", "{{$parent.$index}}").Replace("1", "{{$index}}")" value="{{calendarYearExpenditure.IsRelevant}}" />
            </div>
        </div>
        if (@ViewDataTyped.ShowCommentsSection)
        {
            <hr />
            <div class="row form-group">
                <div class="col-xs-12 col-sm-4 control-label">
                    @Html.LabelFor(m => m.Comments)
                </div>
                <div class="col-xs-12 col-sm-8">
                    @if (ViewDataTyped.CanEditComments)
                    {
                        @Html.TextAreaFor(m => m.Comments, new { style = "width: 100%", @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Comments)
                    }
                    else
                    {
                        @Html.Raw(ViewDataTyped.Project.ExpendituresComment.HtmlEncodeWithBreaks())
                    }
                </div>
            </div>
        }
        <div class="row">
            <div style="text-align: right; white-space: nowrap">
                <button type="submit" class="btn btn-xs btn-firma" title="Save changes made on this page" value="false" name="@Html.NameFor(x => x.AutoAdvance)" ng-disabled="pmForm.$invalid">Save</button>
                <button type="submit" class="btn btn-xs btn-firma" title="Save changes and continue to next page" value="true" name="@Html.NameFor(x => x.AutoAdvance)" ng-disabled="pmForm.$invalid">Save &amp; Continue<span class='glyphicon glyphicon-chevron-right'></span></button>
            </div>
        </div>
    }
</div>



