@*-----------------------------------------------------------------------
    <copyright file="PerformanceMeasures.cshtml" company="Tahoe Regional Planning Agency and Sitka Technology Group">
    Copyright (c) Tahoe Regional Planning Agency and Sitka Technology Group. All rights reserved.
    <author>Sitka Technology Group</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@
@using System.Web.Mvc.Html
@using LtInfo.Common.DesignByContract
@using ProjectFirma.Web.Common
@using ProjectFirma.Web.Controllers
@using ProjectFirmaModels.Models
@using ProjectFirma.Web.Views.ProjectCreate
@using Microsoft.Web.Mvc
@using Newtonsoft.Json.Linq
@using ProjectFirma.Web.Models
@inherits PerformanceMeasures

@{

    Check.Assert(ViewDataTyped.Project.ProjectStage != ProjectStage.PlanningDesign, "Performance Measures can't be edited for projects in the Planning/Design stage.");
}

@section JavascriptAndStylesContent
{

    <script src="@Url.Content("~/Views/ProjectCreate/PerformanceMeasuresController.js")" type="text/javascript"></script>
    <script type="text/javascript">
            // <![CDATA[
            angular.module("ProjectFirmaApp").factory("angularModelAndViewData",
                function() {
                    return {
                        AngularModel: @Html.Raw(JObject.FromObject(Model)),
                        AngularViewData: @Html.Raw(JObject.FromObject(ViewDataTyped.ViewDataForAngular))
                    };
                });

            jQuery(".selectpicker").selectpicker("refresh");
            jQuery(".modal").on("hidden.bs.modal",
                function () {
                    jQuery(".bootstrap-select.open").removeClass("open");
                });

            jQuery(document).ready(function() { HookupCheckIfFormIsDirty(undefined, ".submitProject"); });
            // ]]>
    </script>

}

<p>
    To enter your project's annual accomplishments:
    <ul>
        <li>Select and add the appropriate @MultiTenantHelpers.GetPerformanceMeasureNamePluralized() to the list below</li>
        <li>For each @MultiTenantHelpers.GetPerformanceMeasureNamePluralized(), select the appropriate @FieldDefinitionEnum.PerformanceMeasureSubcategory.ToType().GetFieldDefinitionLabel() options</li>
        <li>Enter the accomplishment value</li>
        <li>
            You must enter at least one @MultiTenantHelpers.GetPerformanceMeasureName() per year for the duration defined by your project's Start and Completion
            Years (or, if @FieldDefinitionEnum.CompletionYear.ToType().GetFieldDefinitionLabel() isn't set, through the @Html.LinkWithFieldDefinitionFor(FieldDefinitionEnum.ReportingYear.ToType(), string.Format("current {0}", FieldDefinitionEnum.ReportingYear.ToType().GetFieldDefinitionLabel()), new List<string> { "fieldDefinitionLink" })).
        </li>
    </ul>
    Click the <span class="helpicon glyphicon glyphicon-question-sign blue" title="Help"></span> icon to view reporting guidance
    on a specific @MultiTenantHelpers.GetPerformanceMeasureName(). You may review and update @MultiTenantHelpers.GetPerformanceMeasureName() subcategories and accomplishment values from previous years, and may add the
    same @MultiTenantHelpers.GetPerformanceMeasureName() multiple times.
</p>
<hr />

<div class="row">
    <div class="col-xs-12">
        <div ng-app="ProjectFirmaApp" ng-controller="PerformanceMeasuresController">
            @if (Model.ProjectExemptReportingYears != null && Model.ProjectExemptReportingYears.Any())
            {
                <div style="margin-top: 5px">
                    <a style="font-weight: bold; cursor: pointer" ng-click="AngularViewData.ShowExemptYears = !AngularViewData.ShowExemptYears">
                        <i ng-class="AngularViewData.ShowExemptYears ? 'glyphicon glyphicon-chevron-up' : 'glyphicon glyphicon-chevron-down'"></i>
                        What if the @FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel() has no accomplishments to report?
                    </a>
                    <div ng-show="AngularViewData.ShowExemptYears">
                        Select the years for which you have no accomplishments to report and provide a brief explanation.
                        <div>
                            <label ng-repeat="projectExemptYear in AngularModel.ProjectExemptReportingYears" style="padding-right: 10px">
                                <input type="checkbox" ng-model="projectExemptYear.IsExempt" /> <span ng-bind="projectExemptYear.CalendarYearDisplay"></span>
                            </label>
                        </div>
                        @Html.TextAreaFor(x => x.Explanation, new Dictionary<string, object> { { "style", "width:100%" }, { "placeholder", "Explanation here" }, { "ng-model", "AngularModel.Explanation" }, { "class", "form-control" } })

                    </div>
                </div>
                <hr />
            }
            <div class="form-group">
                <label class="control-label">@MultiTenantHelpers.GetPerformanceMeasureName() to Add:</label>
                <div class="input-group">
                    <select ng-model="PerformanceMeasureToAdd"
                            class="selectpicker"
                            data-live-search="true"
                            data-container="body"
                            title="Select a @MultiTenantHelpers.GetPerformanceMeasureName()"
                            data-width="100%">
                        <option value="" disabled selected>Select a @MultiTenantHelpers.GetPerformanceMeasureName()</option>
                        <option ng-repeat="performanceMeasure in filteredPerformanceMeasures()"
                                value="{{performanceMeasure.PerformanceMeasureID}}"
                                ng-selected="PerformanceMeasureToAdd == performanceMeasure.PerformanceMeasureID"
                                ng-bind="performanceMeasure.DisplayName"
                                data-tokens="{{performanceMeasure.DisplayName}}"></option>
                    </select>
                    <span class="input-group-btn">
                        <button class="btn btn-firma" type="button" ng-click="addRow()">
                            <span class="glyphicon glyphicon-plus"></span> Add
                        </button>
                    </span>
                </div>
            </div>
            <br />
            @using (Html.BeginForm<ProjectCreateController>(x => x.PerformanceMeasures(ViewDataTyped.Project, null), FormMethod.Post, new Dictionary<string, object> { { "name", "pmForm" }, { "novalidate", "novalidate" } }))
            {
                @Html.HiddenFor(m => m.ProjectID);
                <table class="table" ng-show="AngularModel.PerformanceMeasureActuals.length > 0" ng-repeat="performanceMeasureGroup in groupedPerformanceMeasures()">
                    <thead>
                        <tr>
                            <th colspan="{{numberOfSubcategoryOptions(performanceMeasureGroup) + 4}}">
                                <span class="helpicon glyphicon glyphicon-question-sign" title="Click to get help on {{getPerformanceMeasureName(performanceMeasureGroup)}}" ng-mouseover="performanceMeasureTooltip(performanceMeasureGroup)"></span>
                                <span ng-bind="getPerformanceMeasureName(performanceMeasureGroup)" style="font-weight: bold"></span>
                            </th>
                        </tr>
                        <tr>
                            <th></th>
                            <th>@Html.LabelWithRequiredTagFor(ViewDataTyped.ReportingYearLabel)</th>
                            <th ng-show="getPerformanceMeasure(performanceMeasureGroup.PerformanceMeasureID).HasRealSubcategories" ng-repeat="performanceMeasureActualSubcategoryOption in performanceMeasureGroup.PerformanceMeasureActualSubcategoryOptions | orderBy:[getSubcategoryName]">{{getSubcategoryName(performanceMeasureActualSubcategoryOption)}}</th>
                            <th>Value</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr ng-repeat="performanceMeasureActual in getGroupPerformanceMeasureActuals(performanceMeasureGroup)" ng-form="pmActualValuesForm">
                            <td style="width: 50px">
                                <span class="glyphicon glyphicon-warning-sign red" alt="Required information has not been completely provided (you can't submit this update)" ng-show="showRowValidationWarnings(performanceMeasureActual)"></span>
                                <span class="glyphicon glyphicon-trash" title="Remove row" alt="Remove row" ng-click="deleteRow(performanceMeasureActual)" style="cursor: pointer"></span>
                            </td>
                            <td style="width: 120px">
                                <select class="form-control"
                                        ng-model="performanceMeasureActual.CalendarYear" required>
                                    <option ng-repeat="calendarYearString in AngularViewData.CalendarYearStrings"
                                            value="{{calendarYearString.CalendarYear}}"
                                            ng-selected="calendarYearString.CalendarYear == performanceMeasureActual.CalendarYear">
                                        {{calendarYearString.CalendarYearDisplay}}
                                    </option>
                                </select>
                            </td>
                            <td ng-show="getPerformanceMeasure(performanceMeasureActual.PerformanceMeasureID).HasRealSubcategories" ng-repeat="performanceMeasureActualSubcategoryOption in performanceMeasureActual.PerformanceMeasureActualSubcategoryOptions | orderBy:[getSubcategoryName]">
                                <select class="form-control"
                                        ng-model="performanceMeasureActualSubcategoryOption.PerformanceMeasureSubcategoryOptionID">
                                    <option ng-repeat="performanceMeasureSubcategoryOption in getSubcategoryOptionsForSubcategory(performanceMeasureActualSubcategoryOption.PerformanceMeasureSubcategoryID)"
                                            value="{{performanceMeasureSubcategoryOption.PerformanceMeasureSubcategoryOptionID}}"
                                            ng-selected="performanceMeasureActualSubcategoryOption.PerformanceMeasureSubcategoryOptionID == performanceMeasureSubcategoryOption.PerformanceMeasureSubcategoryOptionID">
                                        {{performanceMeasureSubcategoryOption.PerformanceMeasureSubcategoryOptionName}}
                                    </option>
                                </select>
                            </td>
                            <td style="width: 100px">
                                <input class="form-control" style="text-align: right"
                                       ng-model="performanceMeasureActual.ActualValue" />
                            </td>
                            <td style="vertical-align: middle; padding-left: 0">
                                {{getMeasurementUnitTypeDisplayName(performanceMeasureActual)}}
                            </td>
                        </tr>
                        <tr>
                            <td colspan="{{numberOfSubcategoryOptions(performanceMeasureGroup) + 4}}" class="text-right">
                                <button class="btn btn-xs btn-firma" type="button" ng-click="addPerformanceMeasureToGroup(performanceMeasureGroup)">
                                    <span class="glyphicon glyphicon-plus"></span> Add Reported Value
                                </button>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <div ng-repeat="performanceMeasureActual in AngularModel.PerformanceMeasureActuals | orderBy:'PerformanceMeasureID'">
                    <input type="hidden" name="@Html.NameFor(x => x.PerformanceMeasureActuals[0].ActualValue).ToString().Replace("0", "{{$index}}")" value="{{performanceMeasureActual.ActualValue}}">
                    <input type="hidden" name="@Html.NameFor(x => x.PerformanceMeasureActuals[0].CalendarYear).ToString().Replace("0", "{{$index}}")" value="{{performanceMeasureActual.CalendarYear}}">
                    <input type="hidden" name="@Html.NameFor(x => x.PerformanceMeasureActuals[0].PerformanceMeasureActualID).ToString().Replace("0", "{{$index}}")" value="{{performanceMeasureActual.PerformanceMeasureActualID}}">
                    <input type="hidden" name="@Html.NameFor(x => x.PerformanceMeasureActuals[0].ProjectID).ToString().Replace("0", "{{$index}}")" value="{{performanceMeasureActual.ProjectID}}">
                    <input type="hidden" name="@Html.NameFor(x => x.PerformanceMeasureActuals[0].PerformanceMeasureID).ToString().Replace("0", "{{$index}}")" value="{{performanceMeasureActual.PerformanceMeasureID}}">

                    <div ng-repeat="performanceMeasureActualSubcategoryOption in getSubcategoryOptionsSelected(performanceMeasureActual)">
                        <input type="hidden" name="@Html.NameFor(x => x.PerformanceMeasureActuals[0].PerformanceMeasureActualSubcategoryOptions[1].PerformanceMeasureSubcategoryOptionID).ToString().Replace("0", "{{$parent.$index}}").Replace("1", "{{$index}}")" value="{{performanceMeasureActualSubcategoryOption.PerformanceMeasureSubcategoryOptionID}}">
                        <input type="hidden" name="@Html.NameFor(x => x.PerformanceMeasureActuals[0].PerformanceMeasureActualSubcategoryOptions[1].PerformanceMeasureSubcategoryID).ToString().Replace("0", "{{$parent.$index}}").Replace("1", "{{$index}}")" value="{{performanceMeasureActualSubcategoryOption.PerformanceMeasureSubcategoryID}}">
                        <input type="hidden" name="@Html.NameFor(x => x.PerformanceMeasureActuals[0].PerformanceMeasureActualSubcategoryOptions[1].PerformanceMeasureID).ToString().Replace("0", "{{$parent.$index}}").Replace("1", "{{$index}}")" value="{{performanceMeasureActualSubcategoryOption.PerformanceMeasureID}}">
                    </div>
                </div>
                <div ng-repeat="projectExemptYear in AngularModel.ProjectExemptReportingYears">
                    <input type="hidden" name="@Html.NameFor(x => x.ProjectExemptReportingYears[0].CalendarYear).ToString().Replace("0", "{{$index}}")" value="{{projectExemptYear.CalendarYear}}" />
                    <input type="hidden" name="@Html.NameFor(x => x.ProjectExemptReportingYears[0].CalendarYearDisplay).ToString().Replace("0", "{{$index}}")" value="{{projectExemptYear.CalendarYearDisplay}}" />
                    <input type="hidden" name="@Html.NameFor(x => x.ProjectExemptReportingYears[0].ProjectID).ToString().Replace("0", "{{$index}}")" value="{{projectExemptYear.ProjectID}}" />
                    <input type="hidden" name="@Html.NameFor(x => x.ProjectExemptReportingYears[0].ProjectExemptReportingYearID).ToString().Replace("0", "{{$index}}")" value="{{projectExemptYear.ProjectExemptReportingYearID}}" />
                    <input type="hidden" name="@Html.NameFor(x => x.ProjectExemptReportingYears[0].IsExempt).ToString().Replace("0", "{{$index}}")" value="{{projectExemptYear.IsExempt}}" />
                </div>
                <input type="hidden" name="@Html.NameFor(x => x.Explanation)" value="{{AngularModel.Explanation}}" />
                <div class="row">
                    <div class="pull-right">
                        <button type="submit" class="btn btn-xs btn-firma" title="Save changes made on this page" value="false" name="@Html.NameFor(x => x.AutoAdvance)" ng-disabled="pmForm.$invalid">Save</button>
                        <button type="submit" class="btn btn-xs btn-firma" title="Save changes and continue to next page" value="true" name="@Html.NameFor(x => x.AutoAdvance)" ng-disabled="pmForm.$invalid">Save &amp; Continue<span class='glyphicon glyphicon-chevron-right'></span></button>
                    </div>
                </div>

            }

        </div>
    </div>
</div>

