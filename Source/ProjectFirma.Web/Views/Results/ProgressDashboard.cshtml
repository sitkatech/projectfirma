@*-----------------------------------------------------------------------
    <copyright file="ProgressDashboard.cshtml" company="Tahoe Regional Planning Agency & Environmental Science Associates">
    Copyright (c) Tahoe Regional Planning Agency & Environmental Science Associates. All rights reserved.
    <author>Environmental Science Associates</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@
@using LtInfo.Common
@using ProjectFirma.Web.Models
@using ProjectFirma.Web.Views.Shared
@inherits ProjectFirma.Web.Views.Results.ProgressDashboard


<style>
    .progressDashboardNavBar {
        position: -webkit-sticky;
        position: sticky;
        top: 0;
        z-index: 1000;
    }

    .stickyHeaderNavBar {

        text-transform: uppercase;
        text-align: center;
        @*display: flex;*@
        padding-left: 0;
        padding-right: 0;
    }

    .stickyHeaderNavBar ul {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
        float: none;
    }

    .progressDashboardNavBar .nav li a {
        color: white;
        width: 100%
    }

    .progressDashboardNavBar .nav li {
        padding-left: 0;
        padding-right: 0;
    }

    .progressDashboardNavBar .nav li {
        background-color: #446a7c;
        color: white;
        display: flex;
        flex-grow: 1;
        align-self: center;
        justify-content: center;
        border: 1px #1C2329 solid;
    }

        .progressDashboardNavBar .nav li.active {
            color: #446a7c;
            background-color: #edf6fb;
            text-decoration: none;
        }
            .progressDashboardNavBar .nav li.active a {
                color: #446a7c;
            }

        .progressDashboardNavBar .nav li:hover, .progressDashboardNavBar .nav li:hover a, .progressDashboardNavBar .nav li a:hover {
            color: #446a7c;
            background-color: #edf6fb;
            text-decoration: none;
        }

    .pageTitle {
        text-transform: uppercase;
        font-weight: bold;
        font-size: 35px;
        scroll-margin-top: 125px;
    }

    .progressOverviewIcon img {
        margin: auto;
        max-width: 85px;
    }

    .progressOverviewNumber, .acresConstructedCardNumber, .arcesConstructedDetailNumber {
        font-weight: bold;
        font-size: 45px;
    }

    .progressOverviewNumber {
        line-height: 36px;
        margin-bottom: 15px;
    }

    .progressOverviewLabel {
        text-transform: uppercase;
        font-size: 20px
    }

    .progressOverviewLabel div {
        max-width: 200px;
        margin: auto;
    }

    .progress {
        margin-bottom: 0;
        height: 50px;
        border-radius: 0;
    }
    .progressBarMinMaxNumbers {
        font-size: 24px;
        font-weight: bold;
    }

    .progress-bar-projects-in-design {
        background-color: #666FAF;
    }

    .progress-bar-in-construction {
        background-color: #FEC51F;
    }

    .progress-bar-completed {
        background-color: #0E3F77;
    }

    .progress-bar-in-planning {
        background-color: #30ACBB
    }

    .progressBarLegendPanelWrapper {
        display: flex;
        flex-basis: 33.3%;
    }

    .progressBarLegendPanel {
        display: flex;
        flex-direction: column;
        width: 100%;
    }

    .progressBarLegendPanel.projectsInDesign {
        border-color: #666FAF;
        border-radius: 0;
    }
    .progressBarLegendPanel.inConstruction {
        border-color: #FEC51F;
        border-radius: 0;
    }
    .progressBarLegendPanel.completed {
        border-color: #0E3F77;
        border-radius: 0;
    }
    .progressBarLegendPanel.inPlanning {
        border-color: #30ACBB;
        border-radius: 0;
    }

    .progressBarLegendPanel .panel-heading {
        padding: 0;
        height: 12px;
        border-radius: 0;
        display: flex;
    }

    .progressBarLegendPanel .projectsInDesign {
        background-color: #666FAF;
        border-color: #666FAF;
    }

    .progressBarLegendPanel .inConstruction {
        background-color: #FEC51F;
        border-color: #FEC51F;
    }

    .progressBarLegendPanel .completed {
        background-color: #0E3F77;
        border-color: #0E3F77;
    }

    .progressBarLegendPanel .inPlanning {
        background-color: #30ACBB;
        border-color: #30ACBB;
    }

    .progressBarLegendPanel .panel-body {
        padding: 10px 5px;
        display: flex;
        flex-grow: 2;
        justify-content: center;
    }

    .progressBarLegendPanelBody {
        display: flex;
        flex-direction: column;
        justify-content: center;
    }

    .acresConstructedCardWrapper {
        margin-right: auto;
        margin-left: auto;
        margin-bottom: 25px;
        font-size: 24px;
    }



    .acresConstructedCard {
        color: white;
        background-color: #0E3F77;
        height: 150px;
        border-radius: 4px;
        padding: 0 20px;
        display: flex;
        flex-direction: column;
        justify-content: center;
        text-align: center;
        align-items: center;
    }

        a.acresConstructedCard {
            color: white;
        }

        .acresConstructedCard div {
            display: flex;
            align-items: center;
            margin: auto;
            flex-basis: 33%;
        }

    .acresConstructedCardLabel {
        flex-basis: 40% !important;
    }

    .acresConstructedCardNumber {
        line-height: 45px;
        align-items: flex-start !important;
    }

    .acresConstructedPieChartWrapper, .acresConstructedColumnChartWrapper {
        border: #D9D9D9 4px solid;
        padding: 5px;
        border-radius: 5px;
    }


    .acresConstructedColumnChartWrapper {
        padding-top: 20px;
    }

    .acresConstructedLegend {
        margin-right: 5px;
        margin-left: 5px;
    }

    .acresConstructedLegend div {
        padding: 0;
    }

    .acresConstructedLegend .acresCompletedLegend, .acresConstructedLegend .acresInConstructionLegend, .acresConstructedLegend .acresPlannedLegend {
        height: 15px;
        width: 20px;
        display: inline-block;
        margin-right: 5px;
    }

    .acresConstructedLegend .col-xs-3 {
        text-align: right;
    }

    .acresConstructedLegend br {
        display: none;
    }

    .acresCompletedLegend {
        background-color: #0E3F77;
    }

    .acresInConstructionLegend {
        background-color: #FEC51F;
    }

    .acresPlannedLegend {
        background-color: #666FAF;
    }

    .chartTitle {
        font-size: 20px;
        width: 100%;
        min-height: 46.4px; @* 2 line heights *@
    }

    .leftHandChart {
        margin-left: auto;
        margin-right: auto;
        padding-left: 0;
        padding-right: 0;
        padding-top: 15px;
        padding-bottom: 15px;
    }

    .rightHandChart {
        margin-left: auto;
        margin-right: auto;
        page-break-inside: avoid;
        padding-left: 0;
        padding-right: 0;
        padding-top: 15px;
        padding-bottom: 15px;
    }

    .chartWithOverlay {
        position: relative;

    }
    .overlay {
        width: 100%;
        height: 100px;
        position: absolute;
        top: 200px;
        left: 0;
        text-align: center;
        font-size: 20px;
        font-weight: bold;
        padding-left: 10px;
    }

    .arcesConstructedDetailNumber {
        line-height: 50px
    }

    .projectColumn {
        display: flex;
        flex-direction: column;
    }

    .legendTableWithScroll {
        overflow-y: auto;
        flex-grow: 1;
    }

    .firmaChartControls {
        display: none;
    }


</style>

<style type="text/css" media="only screen and (min-width: 452px)">
    .acresConstructedCardRow, .acresConstructedChartRow {
        width: 85%;
        margin: auto;
    }

    .acresConstructedChartRow {
        margin-bottom: 15px;
    }
</style>

<style type="text/css" media="only screen and (min-width: 619px) and (max-width: 716px)">
    .nav > li > a.fishAndWildlifeNavLink, .navbar-nav > li > a.fishAndWildlifeNavLink {
        padding: 5px 15px 5px 15px;
    }

    .nav > li > a.progressOverviewNavLink, .navbar-nav > li > a.progressOverviewNavLink, .nav > li > a.dustSuppressionNavLink, .navbar-nav > li > a.dustSuppressionNavLink {
        padding: 15px 10px 15px 10px;
    }
</style>

<style type="text/css" media="only screen and (min-width: 585px) and (max-width: 619px)">

    .nav > li > a.dustSuppressionNavLink, .navbar-nav > li > a.dustSuppressionNavLink {
        padding: 15px 10px 15px 10px;
    }
</style>

<style type="text/css" media="only screen and (min-width: 585px) and (max-width: 619px)">

    .nav > li > a.fishAndWildlifeNavLink, .navbar-nav > li > a.fishAndWildlifeNavLink, .nav > li > a.progressOverviewNavLink, .navbar-nav > li > a.progressOverviewNavLink {
        padding: 5px 15px 5px 15px;
    }
</style>


<style type="text/css" media="only screen and (min-width: 768px)">
    .progressOverviewLabel div {
        max-width: 150px;
        margin: auto;
    }

    .acresConstructedLegend br {
        display: block;
    }

    .acresConstructedCard {
        height: 180px;
    }

        .acresConstructedCard div {
            display: flex;
            align-items: center;
            margin: auto;
            flex-basis: 25%;
        }

    .legendSpacer {
        min-height: 98px;
    }

</style>

<style type="text/css" media="only screen and (min-width: 992px)">
    .leftHandChart {
        padding-right: 15px;
    }

    .rightHandChart {
        padding-left: 15px;
    }

    .stickyHeaderNavBar ul {
        display: flex;
        flex-wrap: nowrap;
    }

    .pageTitle {
        scroll-margin-top: 100px;
    }

</style>

<style type="text/css" media="only screen and (min-width: 768px) and (max-width: 992px)">
    .acresConstructedCardLabel {
        flex-basis: 50% !important;
    }

    .acresConstructedCardNumber {
        flex-basis: 25% !important;
    }
</style>


<style type="text/css" media="only screen and  (max-width: 532px)">
    .progressDashboardNavBar > nav > ul > li {
        width: 100%;
    }
</style>

<div class="progressDashboardNavBar container-fluid">
    <nav class="stickyHeaderNavBar container">
        <ul class="nav navbar-nav ">
            <li class="col-md-4 col-sm-4 col-xs-3"><a href="#progressOverview" class="progressOverviewNavLink">Progress Overview</a></li>
            <li class="col-md-4 col-sm-4 col-xs-3"><a href="#dustSuppression" class="dustSuppressionNavLink">Dust Suppression</a></li>
            <li class="col-md-4 col-sm-4 col-xs-3"><a href="#fishAndWildlifeHabitat" class="fishAndWildlifeNavLink">Fish & Wildlife Habitat</a></li>
        </ul>
    </nav>
</div>

<div class="container">
    <h2 class="pageTitle" id="progressOverview">Progress Overview</h2>
    <div class="row">
        <div class="col-xs-12" style="margin-bottom: 20px;">
            @{ ViewPageContent.RenderPartialView(Html, ViewDataTyped.ViewPageContentViewData); }
        </div>

    </div>
    <div class="row" style="text-align: center; margin: auto">
        <div class="col-xs-6 col-sm-4">
            <div class="progressOverviewIcon">
                <img class="img-responsive" style="padding: 8px" src="~/Content/img/SSMPProjectTracker/project-dashboard-projects-icon.png" />
            </div>
            <div class="progressOverviewNumber">@ViewDataTyped.ProjectCount</div>
            <div class="progressOverviewLabel">
                <div>Projects</div>
            </div>
        </div>
        <div class="col-xs-6 col-sm-4">
            <div class="progressOverviewIcon">
                <img class="img-responsive" style="padding: 9px" src="~/Content/img/SSMPProjectTracker/progress-dashboard-funds-icon.png" />
            </div>
            <div class="progressOverviewNumber">@ViewDataTyped.FundsCommittedToProgram M</div>
            <div class="progressOverviewLabel">
                <div>Funds Committed to Program</div>
            </div>
        </div>
        <div class="col-xs-6 col-xs-offset-3 col-sm-4 col-sm-offset-0">
            <div class="progressOverviewIcon">
                <img class="img-responsive" style="padding: 11px" src="~/Content/img/SSMPProjectTracker/progress-dashboard-partnerships-icon.png" />
            </div>
            <div class="progressOverviewNumber">@ViewDataTyped.PartnershipCount</div>
            <div class="progressOverviewLabel">
                <div>Partnerships</div>
            </div>
        </div>
    </div>
    <div style="margin-top: 75px">
        <div class="row" style="margin-top: 40px;">
            <div class="col-xs-12 col-sm-3" style="text-align: center">
                <div class="progressOverviewNumber">@ViewDataTyped.AcresTarget.ToGroupedNumeric()</div>
                <div style="text-transform: uppercase; font-size: 20px">
                    <div>Total Acres</div>
                </div>
            </div>
            <div class="col-xs-12 col-sm-9">
                <div class="progress">
                    <div class="progress-bar progress-bar-completed" role="progressbar" style="width: @(ViewDataTyped.AcresCompletedPercent)%" aria-valuenow="@ViewDataTyped.TotalAcresCompleted"
                         aria-valuemin="0" aria-valuemax="@ViewDataTyped.AcresTarget"></div>
                    <div class="progress-bar progress-bar-in-construction" role="progressbar" style="width: @(ViewDataTyped.AcresInConstructionPercent)%" aria-valuenow="@ViewDataTyped.TotalAcresInConstruction"
                         aria-valuemin="0" aria-valuemax="@ViewDataTyped.AcresTarget"></div>
                    <div class="progress-bar progress-bar-projects-in-design" role="progressbar" style="width: @(ViewDataTyped.AcresProjectsInDesignPercent)%" aria-valuenow="@ViewDataTyped.TotalAcresProjectsInDesign"
                         aria-valuemin="0" aria-valuemax="@ViewDataTyped.AcresTarget"></div>
                    <div class="progress-bar progress-bar-in-planning" role="progressbar" style="width: @(ViewDataTyped.AcresInPlanningPercent)%" aria-valuenow="@ViewDataTyped.TotalAcresInPlanning"
                         aria-valuemin="0" aria-valuemax="@ViewDataTyped.AcresTarget"></div>
                </div>

            </div>
            <div class="col-xs-12 col-sm-offset-3 col-sm-9">
                <div style="margin-top: 15px; text-align: center; display: flex">
                    <div class="progressBarLegendPanelWrapper" style="padding-right: 15px;">
                        <div class="panel progressBarLegendPanel completed">
                            <div class="panel-heading panelTitle completed"></div>
                            <div class="panel-body">
                                <div class="progressBarLegendPanelBody">
                                    <div class="progressBarMinMaxNumbers">@ViewDataTyped.TotalAcresCompleted.ToGroupedNumeric() acres</div>
                                    <div style="text-transform: uppercase">
                                        <div>Interim Dust Suppression & Construction Complete</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="progressBarLegendPanelWrapper" style="padding-right: 15px; padding-left: 15px;">
                        <div class="panel progressBarLegendPanel inConstruction">
                            <div class="panel-heading panelTitle inConstruction"></div>
                            <div class="panel-body">
                                <div class="progressBarLegendPanelBody"> 
                                    <div class="progressBarMinMaxNumbers">@ViewDataTyped.TotalAcresInConstruction.ToGroupedNumeric() acres</div>
                                    <div style="text-transform: uppercase">
                                        <div>Projects In Construction</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="progressBarLegendPanelWrapper" style="padding-right: 15px; padding-left: 15px;">
                        <div class="panel progressBarLegendPanel projectsInDesign">
                            <div class="panel-heading panelTitle projectsInDesign"></div>
                            <div class="panel-body">
                                <div class="progressBarLegendPanelBody">
                                    <div class="progressBarMinMaxNumbers">@ViewDataTyped.TotalAcresProjectsInDesign.ToGroupedNumeric() acres</div>
                                    <div style="text-transform: uppercase">
                                        <div>Projects In Design</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="progressBarLegendPanelWrapper" style="padding-left: 15px;">
                        <div class="panel progressBarLegendPanel inPlanning">
                            <div class="panel-heading panelTitle inPlanning"></div>
                            <div class="panel-body">
                                <div class="progressBarLegendPanelBody">
                                    <div class="progressBarMinMaxNumbers">@ViewDataTyped.TotalAcresInPlanning.ToGroupedNumeric() acres</div>
                                    <div style="text-transform: uppercase">
                                        <div>In Planning</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xs-12" style="margin-top: 20px; margin-bottom: 25px">
                @{ ViewPageContent.RenderPartialView(Html, ViewDataTyped.AcresConstructedByTheNumbersViewPageContentViewData); }
            </div>
        </div>
    </div>



    <div>
        <div class="row acresConstructedChartRow">
            <div class="col-xs-12">
                <div class="col-md-6 leftHandChart">
                    <div class="chartPanel acresConstructedPieChartWrapper">
                        @if (ViewDataTyped.DustSuppressionHasData)
                        {
                            <div class="chartWithOverlay">
                                @{ ViewGoogleChart.RenderPartialView(Html, ViewDataTyped.DustSuppressionPieChart); }
                                <div class="overlay">
                                    @if (ViewDataTyped.DustSuppressionValues.All(x => x > 0)
                                         || (ViewDataTyped.DustSuppressionValues[0] > 0 && ViewDataTyped.DustSuppressionValues[1] > 0)
                                         || (ViewDataTyped.DustSuppressionValues[0] > 0 && ViewDataTyped.DustSuppressionValues[2] > 0)
                                         || (ViewDataTyped.DustSuppressionValues[1] > 0 && ViewDataTyped.DustSuppressionValues[2] > 0))
                                    {
                                        <div>Total</div>
                                        <div>@(ViewDataTyped.DustSuppressionValues.Sum().ToGroupedNumeric()) acres</div>
                                    }
                                </div>
                            </div>

                            <div class="row acresConstructedLegend">
                                <div class="col-xs-12 col-sm-4 col-lg-3 col-lg-offset-1">
                                    <div class="col-xs-3"><span class="acresCompletedLegend"></span></div>
                                    <div class="col-xs-9"><span style="font-weight: bold;">Interim & Completed</span><br /> @ViewDataTyped.DustSuppressionValues[0].ToGroupedNumeric() acres</div>
                                </div>
                                <div class="col-xs-12 col-sm-4">
                                    <div class="col-xs-3"><span class="acresInConstructionLegend"></span></div>
                                    <div class="col-xs-9"><span style="font-weight: bold;">In Construction</span><br /> @ViewDataTyped.DustSuppressionValues[1].ToGroupedNumeric() acres</div>
                                </div>
                                <div class="col-xs-12 col-sm-4">
                                    <div class="col-xs-3"><span class="acresPlannedLegend"></span></div>
                                    <div class="col-xs-9"><span style="font-weight: bold;">In Design</span><br /> @ViewDataTyped.DustSuppressionValues[2].ToGroupedNumeric() acres</div>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="text-center">
                                <p class="systemText">No @ViewDataTyped.DustSuppressionPerformanceMeasure.GetDisplayName()</p>
                            </div>
                        }
                    </div>
                </div>
                <div class="col-md-6 rightHandChart">
                    <div class="chartPanel acresConstructedPieChartWrapper">
                        @if (ViewDataTyped.FishAndWildlifeHabitatAcresCountedHasData)
                        {
                            <div class="chartWithOverlay">
                                @{ ViewGoogleChart.RenderPartialView(Html, ViewDataTyped.FishAndWildlifeHabitatAcresCountedPieChart); }
                                <div class="overlay">
                                    @if (ViewDataTyped.FishAndWildlifeHabitatAcresCountedValues.All(x => x > 0)
                                         || (ViewDataTyped.FishAndWildlifeHabitatAcresCountedValues[0] > 0 && ViewDataTyped.FishAndWildlifeHabitatAcresCountedValues[1] > 0)
                                         || (ViewDataTyped.FishAndWildlifeHabitatAcresCountedValues[0] > 0 && ViewDataTyped.FishAndWildlifeHabitatAcresCountedValues[2] > 0)
                                         || (ViewDataTyped.FishAndWildlifeHabitatAcresCountedValues[1] > 0 && ViewDataTyped.FishAndWildlifeHabitatAcresCountedValues[2] > 0))
                                    {
                                        <div>Total</div>
                                        <div>@(ViewDataTyped.FishAndWildlifeHabitatAcresCountedValues.Sum().ToGroupedNumeric()) acres</div>
                                    }
                                </div>
                            </div>
                            <div class="row acresConstructedLegend">
                                <div class="col-xs-12 col-sm-4 col-lg-3 col-lg-offset-1">
                                    <div class="col-xs-3"><span class="acresCompletedLegend"></span></div>
                                    <div class="col-xs-9"><span style="font-weight: bold;">Completed</span><br /> @ViewDataTyped.FishAndWildlifeHabitatAcresCountedValues[0].ToGroupedNumeric() acres</div>
                                </div>
                                <div class="col-xs-12 col-sm-4">
                                    <div class="col-xs-3"><span class="acresInConstructionLegend"></span></div>
                                    <div class="col-xs-9"><span style="font-weight: bold;">In Construction</span><br /> @ViewDataTyped.FishAndWildlifeHabitatAcresCountedValues[1].ToGroupedNumeric() acres</div>
                                </div>
                                <div class="col-xs-12 col-sm-4">
                                    <div class="col-xs-3"><span class="acresPlannedLegend"></span></div>
                                    <div class="col-xs-9"><span style="font-weight: bold;">In Design</span><br /> @ViewDataTyped.FishAndWildlifeHabitatAcresCountedValues[2].ToGroupedNumeric() acres</div>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="text-center">
                                <p class="systemText">No @ViewDataTyped.FishAndWildlifeHabitatAcresCountedPerformanceMeasure.GetDisplayName()</p>
                            </div>
                        }
                    </div>
                </div>
            </div>

        </div>
        <div>
            <div class="row acresConstructedCardRow">
                <div class="col-xs-12 col-sm-6 acresConstructedCardWrapper">
                    <a class="acresConstructedCard" href="@ViewDataTyped.PublicAmenitiesAndRecreationAccessPerformanceMeasure.GetSummaryUrl()" target="_blank">
                        <div class="acresConstructedCardLabel">@ViewDataTyped.PublicAmenitiesAndRecreationAccessPerformanceMeasure.GetDisplayName()</div>
                        <div class="acresConstructedCardNumber">@ViewDataTyped.PublicAmenitiesAndRecreationAccessCount.ToGroupedNumeric()</div>
                        <div>Structures</div>
                    </a>
                </div>
                <div class="col-xs-12 col-sm-6 acresConstructedCardWrapper">
                    <a class="acresConstructedCard" href="@ViewDataTyped.EndangeredSpeciesHabitatPerformanceMeasure.GetSummaryUrl()" target="_blank">
                        <div class="acresConstructedCardLabel">@ViewDataTyped.EndangeredSpeciesHabitatPerformanceMeasure.GetDisplayName()</div>
                        <div class="acresConstructedCardNumber">@ViewDataTyped.EndangeredSpeciesHabitatCreatedCount.ToGroupedNumeric()</div>
                        <div>Acres</div>
                    </a>
                </div>
            </div>
        </div>
    </div>

    <div style="margin-top: 75px;">

        <h2 class="pageTitle" id="dustSuppression">Dust Suppression</h2>
        <div style="margin-top: 20px; margin-bottom: 25px">
            @{ ViewPageContent.RenderPartialView(Html, ViewDataTyped.DustSuppressionViewPageContentViewData); }
        </div>
        <div class="row" style="margin-top: 40px;">
            <div class="col-xs-12" style="font-size: 24px; margin-bottom: 25px"><a href="@ViewDataTyped.DustSuppressionPerformanceMeasure.GetSummaryUrl()" target="_blank">@ViewDataTyped.DustSuppressionPerformanceMeasure.GetDisplayName()</a></div>
            <div class="col-xs-12 col-sm-3" style="text-align: center">
                <div class="progressOverviewNumber">@ViewDataTyped.DustSuppressionAcresTarget.ToGroupedNumeric()</div>
                <div style="text-transform: uppercase; font-size: 20px">
                    <div>Total Acres</div>
                </div>
            </div>
            <div class="col-xs-12 col-sm-9">
                <div class="progress">
                    <div class="progress-bar progress-bar-completed" role="progressbar" style="width: @(ViewDataTyped.DustSuppressionValues[0] / ViewDataTyped.DustSuppressionAcresTarget * 100)%" aria-valuenow="@ViewDataTyped.DustSuppressionValues[0]"
                         aria-valuemin="0" aria-valuemax="@ViewDataTyped.DustSuppressionAcresTarget"></div>
                    <div class="progress-bar progress-bar-in-construction" role="progressbar" style="width: @(ViewDataTyped.DustSuppressionValues[1] / ViewDataTyped.DustSuppressionAcresTarget * 100)%" aria-valuenow="@ViewDataTyped.DustSuppressionValues[1]"
                         aria-valuemin="0" aria-valuemax="@ViewDataTyped.DustSuppressionAcresTarget"></div>
                    <div class="progress-bar progress-bar-projects-in-design" role="progressbar" style="width: @(ViewDataTyped.DustSuppressionValues[2] / ViewDataTyped.DustSuppressionAcresTarget * 100)%" aria-valuenow="@ViewDataTyped.DustSuppressionValues[2]"
                         aria-valuemin="0" aria-valuemax="@ViewDataTyped.DustSuppressionAcresTarget"></div>
                    <div class="progress-bar progress-bar-in-planning" role="progressbar" style="width: @(ViewDataTyped.DustSuppressionAcresInPlanning / ViewDataTyped.DustSuppressionAcresTarget * 100)%" aria-valuenow="@ViewDataTyped.DustSuppressionAcresInPlanning"
                         aria-valuemin="0" aria-valuemax="@ViewDataTyped.DustSuppressionAcresTarget"></div>
                </div>
            </div>
            <div class="col-xs-12 col-sm-offset-3 col-sm-9">
                <div style="margin-top: 15px; text-align: center; display: flex;">
                    <div class="progressBarLegendPanelWrapper" style="padding-right: 15px;">
                        <div class="panel progressBarLegendPanel completed">
                            <div class="panel-heading panelTitle completed"></div>
                            <div class="panel-body">
                                <div class="progressBarLegendPanelBody">
                                    <div class="progressBarMinMaxNumbers">@ViewDataTyped.DustSuppressionValues[0].ToGroupedNumeric() acres</div>
                                    <div style="text-transform: uppercase">
                                        <div>Interim Dust Suppression & Construction Complete</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="progressBarLegendPanelWrapper" style="padding-right: 15px; padding-left: 15px;">
                        <div class="panel progressBarLegendPanel inConstruction">
                            <div class="panel-heading panelTitle inConstruction"></div>
                            <div class="panel-body">
                                <div class="progressBarLegendPanelBody">
                                    <div class="progressBarMinMaxNumbers">@ViewDataTyped.DustSuppressionValues[1].ToGroupedNumeric() acres</div>
                                    <div style="text-transform: uppercase">
                                        <div>Projects In Construction</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="progressBarLegendPanelWrapper" style="padding-right: 15px; padding-left: 15px;">
                        <div class="panel progressBarLegendPanel projectsInDesign">
                            <div class="panel-heading panelTitle projectsInDesign"></div>
                            <div class="panel-body">
                                <div class="progressBarLegendPanelBody">
                                    <div class="progressBarMinMaxNumbers">@ViewDataTyped.DustSuppressionValues[2].ToGroupedNumeric() acres</div>
                                    <div style="text-transform: uppercase">
                                        <div>Projects In Design</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="progressBarLegendPanelWrapper" style="padding-left: 15px;">
                        <div class="panel progressBarLegendPanel inPlanning">
                            <div class="panel-heading panelTitle inPlanning"></div>
                            <div class="panel-body">
                                <div class="progressBarLegendPanelBody">
                                    <div class="progressBarMinMaxNumbers">@ViewDataTyped.DustSuppressionAcresInPlanning.ToGroupedNumeric() acres</div>
                                    <div style="text-transform: uppercase">
                                        <div>In Planning</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row acresConstructedColumnChartWrapper">
            <div class="col-sm-6">
                <div id="@(ViewDataTyped.DustSuppressionColumnChart.ChartUniqueName)">
                    <div>
                        @{ ViewGoogleChart.RenderPartialView(Html, ViewDataTyped.DustSuppressionColumnChart); }

                    </div>
                </div>
            </div>
            <div class="col-sm-6 projectColumn"  id="dustSuppressionProjectColumn">
                <div style="overflow-y: hidden; vertical-align: top; min-height: 30px;">
                    <div class="chartTitle">
                        <b>Acres by Project</b>
                    </div>
                </div>
                <div class="legendTableWithScroll">
                    <table class="table table-condensed table-borderless">
                        <tbody>
                        @foreach (var projectColorAndValue in ViewDataTyped.DustSuppressionProjectToColorAndValue)
                        {
                            <tr>
                                <td>
                                    <div style="background-color: @(projectColorAndValue.Value.Item1); height: 15px; width: 20px; margin-top: 3px;"></div>
                                </td>
                                <td>@projectColorAndValue.Key.GetDisplayNameAsUrl()</td>
                                <td>@projectColorAndValue.Value.Item2.ToGroupedNumeric() acres @(projectColorAndValue.Value.Item3 ? "*" : string.Empty)</td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
                <div>
                    @{ ViewPageContent.RenderPartialView(Html, ViewDataTyped.DustSuppressionConvertedAcresNoteViewPageContentViewData); }
                </div>
            </div>
        </div>
        
        <div class="row acresConstructedCardRow" style="margin-top: 40px;">
            <div class="col-xs-12 col-sm-6 acresConstructedCardWrapper">
                <a class="acresConstructedCard" href="@ViewDataTyped.SurfaceRougheningConductedPerformanceMeasure.GetSummaryUrl()" target="_blank">
                    <div class="acresConstructedCardLabel">@ViewDataTyped.SurfaceRougheningConductedPerformanceMeasure.GetDisplayName()</div>
                    <div class="acresConstructedCardNumber">@ViewDataTyped.SurfaceRougheningConductedCount.ToGroupedNumeric()</div>
                    <div>Acres</div>
                </a>
            </div>
            <div class="col-xs-12 col-sm-6 acresConstructedCardWrapper">
                <a class="acresConstructedCard" href="@ViewDataTyped.VegetationEnhancementConductedPerformanceMeasure.GetSummaryUrl()" target="_blank">
                    <div class="acresConstructedCardLabel">@ViewDataTyped.VegetationEnhancementConductedPerformanceMeasure.GetDisplayName()</div>
                    <div class="acresConstructedCardNumber">@ViewDataTyped.VegetationEnhancementConductedCount.ToGroupedNumeric()</div>
                    <div>Acres</div>
                </a>
            </div>
        </div>
    </div>


    <div style="margin-top: 75px;">
        <h2 class="pageTitle" id="fishAndWildlifeHabitat">Fish & Wildlife Habitat</h2>
        <div style="margin-top: 20px; margin-bottom: 25px">
            @{ ViewPageContent.RenderPartialView(Html, ViewDataTyped.FishAndWildlifeHabitatViewPageContentViewData); }
        </div>
        <div class="row" style="margin-top: 40px;">
            <div class="col-xs-12" style="font-size: 24px; margin-bottom: 25px"><a href="@ViewDataTyped.FishAndWildlifeHabitatAcresCountedPerformanceMeasure.GetSummaryUrl()" target="_blank">@ViewDataTyped.FishAndWildlifeHabitatAcresCountedPerformanceMeasure.GetDisplayName()</a></div>
            <div class="col-xs-12 col-sm-3" style="text-align: center">
                <div class="progressOverviewNumber">@ViewDataTyped.FishAndWildlifeHabitatAcresTarget.ToGroupedNumeric()</div>
                <div style="text-transform: uppercase; font-size: 20px">
                    <div>Total Acres</div>
                </div>
            </div>
            <div class="col-xs-12 col-sm-9">
                <div class="progress">
                    <div class="progress-bar progress-bar-completed" role="progressbar" style="width: @(ViewDataTyped.FishAndWildlifeHabitatAcresCountedValues[0] / ViewDataTyped.FishAndWildlifeHabitatAcresTarget * 100)%" aria-valuenow="@ViewDataTyped.FishAndWildlifeHabitatAcresCountedValues[0]"
                         aria-valuemin="0" aria-valuemax="@ViewDataTyped.FishAndWildlifeHabitatAcresTarget"></div>
                    <div class="progress-bar progress-bar-in-construction" role="progressbar" style="width: @(ViewDataTyped.FishAndWildlifeHabitatAcresCountedValues[1] / ViewDataTyped.FishAndWildlifeHabitatAcresTarget * 100)%" aria-valuenow="@ViewDataTyped.FishAndWildlifeHabitatAcresCountedValues[1]"
                         aria-valuemin="0" aria-valuemax="@ViewDataTyped.FishAndWildlifeHabitatAcresTarget"></div>
                    <div class="progress-bar progress-bar-projects-in-design" role="progressbar" style="width: @(ViewDataTyped.FishAndWildlifeHabitatAcresCountedValues[2] / ViewDataTyped.FishAndWildlifeHabitatAcresTarget * 100)%" aria-valuenow="@ViewDataTyped.FishAndWildlifeHabitatAcresCountedValues[2]"
                         aria-valuemin="0" aria-valuemax="@ViewDataTyped.FishAndWildlifeHabitatAcresTarget"></div>
                    <div class="progress-bar progress-bar-in-planning" role="progressbar" style="width: @(ViewDataTyped.FishAndWildlifeHabitatAcresInPlanning / ViewDataTyped.FishAndWildlifeHabitatAcresTarget * 100)%" aria-valuenow="@ViewDataTyped.FishAndWildlifeHabitatAcresInPlanning"
                         aria-valuemin="0" aria-valuemax="@ViewDataTyped.FishAndWildlifeHabitatAcresTarget"></div>
                </div>
            </div>
            <div class="col-xs-12 col-sm-offset-3 col-sm-9">
                <div style="margin-top: 15px; text-align: center; display: flex;">
                    <div class="progressBarLegendPanelWrapper" style="padding-right: 15px;">
                        <div class="panel progressBarLegendPanel completed">
                            <div class="panel-heading panelTitle completed"></div>
                            <div class="panel-body">
                                <div class="progressBarLegendPanelBody">
                                    <div class="progressBarMinMaxNumbers">@ViewDataTyped.FishAndWildlifeHabitatAcresCountedValues[0].ToGroupedNumeric() acres</div>
                                    <div style="text-transform: uppercase">
                                        <div>Construction Complete</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="progressBarLegendPanelWrapper" style="padding-right: 15px; padding-left: 15px;">
                        <div class="panel progressBarLegendPanel inConstruction">
                            <div class="panel-heading panelTitle inConstruction"></div>
                            <div class="panel-body">
                                <div class="progressBarLegendPanelBody">
                                    <div class="progressBarMinMaxNumbers">@ViewDataTyped.FishAndWildlifeHabitatAcresCountedValues[1].ToGroupedNumeric() acres</div>
                                    <div style="text-transform: uppercase">
                                        <div>Projects In Construction</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="progressBarLegendPanelWrapper" style="padding-right: 15px; padding-left: 15px;">
                        <div class="panel progressBarLegendPanel projectsInDesign">
                            <div class="panel-heading panelTitle projectsInDesign"></div>
                            <div class="panel-body">
                                <div class="progressBarLegendPanelBody">
                                    <div class="progressBarMinMaxNumbers">@ViewDataTyped.FishAndWildlifeHabitatAcresCountedValues[2].ToGroupedNumeric() acres</div>
                                    <div style="text-transform: uppercase">
                                        <div>Projects In Design</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="progressBarLegendPanelWrapper" style="padding-left: 15px;">
                        <div class="panel progressBarLegendPanel inPlanning">
                            <div class="panel-heading panelTitle inPlanning"></div>
                            <div class="panel-body">
                                <div class="progressBarLegendPanelBody">
                                    <div class="progressBarMinMaxNumbers">@ViewDataTyped.FishAndWildlifeHabitatAcresInPlanning.ToGroupedNumeric() acres</div>
                                    <div style="text-transform: uppercase">
                                        <div>In Planning</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row acresConstructedColumnChartWrapper">
            <div class="col-sm-6">
                <div id="@(ViewDataTyped.FishAndWildlifeHabitatAcresCountedColumnChart.ChartUniqueName)">
                    <div>
                        @{ ViewGoogleChart.RenderPartialView(Html, ViewDataTyped.FishAndWildlifeHabitatAcresCountedColumnChart); }

                    </div>
                </div>
            </div>
            <div class="col-sm-6 projectColumn" id="fishAndWildlifeHabitatProjectColumn">
                <div style="overflow-y: hidden; vertical-align: top; min-height: 30px;">
                    <div class="chartTitle">
                        <b>Acres by Project</b>
                    </div>
                </div>
               
                <div class="legendTableWithScroll">
                    <table class="table table-condensed table-borderless">
                        <tbody>
                        @foreach (var projectColorAndValue in ViewDataTyped.FishAndWildlifeHabitatAcresCountedProjectToColorAndValue)
                        {
                            <tr>
                                <td>
                                    <div style="background-color: @(projectColorAndValue.Value.Item1); height: 15px; width: 20px; margin-top: 3px;"></div>
                                </td>
                                <td>@projectColorAndValue.Key.GetDisplayNameAsUrl()</td>
                                <td>@projectColorAndValue.Value.Item2.ToGroupedNumeric() acres @(projectColorAndValue.Value.Item3 ? "*" : string.Empty)</td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
                <div>
                    @{ ViewPageContent.RenderPartialView(Html, ViewDataTyped.FishAndWildlifeHabitatConvertedAcresNoteViewPageContentViewData); }
                </div>
            </div>
        </div>
        <div class="row acresConstructedCardRow" style="margin-top: 40px;">
            <div class="col-xs-12 col-sm-6 acresConstructedCardWrapper">
                <a class="acresConstructedCard" href="@ViewDataTyped.AquaticHabitatCreatedPerformanceMeasure.GetSummaryUrl()" target="_blank">
                    <div class="acresConstructedCardLabel">@ViewDataTyped.AquaticHabitatCreatedPerformanceMeasure.GetDisplayName()</div>
                    <div class="acresConstructedCardNumber">@ViewDataTyped.AquaticHabitatCreatedCount.ToGroupedNumeric()</div>
                    <div>Acres</div>
                </a>
            </div>
            <div class="col-xs-12 col-sm-6 acresConstructedCardWrapper">
                <a class="acresConstructedCard" href="@ViewDataTyped.WetlandHabitatCreatedPerformanceMeasure.GetSummaryUrl()" target="_blank">
                    <div class="acresConstructedCardLabel">@ViewDataTyped.WetlandHabitatCreatedPerformanceMeasure.GetDisplayName()</div>
                    <div class="acresConstructedCardNumber">@ViewDataTyped.WetlandHabitatCreatedCount.ToGroupedNumeric()</div>
                    <div>Acres</div>
                </a>
            </div>
        </div>
    </div>


</div>
<script type="text/javascript">
    jQuery(document)
        .ready(function () {

            jQuery('body').scrollspy({
                target: '.stickyHeaderNavBar',
                offset: 150
            });

            document.getElementById("dustSuppressionProjectColumn").style.height = document.getElementById("dustSuppressionAcresCompleted").offsetHeight + "px";
            document.getElementById("fishAndWildlifeHabitatProjectColumn").style.height = document.getElementById("fishAndWildlifeHabitatAcresCountedAcresCompleted").offsetHeight + "px";
        });
</script>
