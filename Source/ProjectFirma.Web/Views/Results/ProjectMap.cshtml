@*-----------------------------------------------------------------------
<copyright file="ProjectMap.cshtml" company="Tahoe Regional Planning Agency and Environmental Science Associates">
Copyright (c) Tahoe Regional Planning Agency and Environmental Science Associates. All rights reserved.
<author>Environmental Science Associates</author>
</copyright>

<license>
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

Source code is available upon request via <support@sitkatech.com>.
</license>
-----------------------------------------------------------------------*@
@using LtInfo.Common
@using ProjectFirmaModels.Models
@using ProjectFirma.Web.Views.Shared.ProjectLocationControls
@using ProjectFirma.Web.Views.Shared
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@using ProjectFirma.Web.Common
@using ProjectFirma.Web.Models
@inherits ProjectFirma.Web.Views.Results.ProjectMap
@section JavascriptAndStylesContent
{
    @{ MapJavascriptIncludes.RenderPartialView(Html); }
    <script type="text/javascript" src="/Content/Bootstrap-select/bootstrap-select.min.js"></script>
    <script type="text/javascript" src="/Content/fancytree/jquery.fancytree-all.min.js"></script>
    <link rel="stylesheet" href="/Content/Bootstrap-select/bootstrap-select.min.css" type="text/css" />
    <link rel="stylesheet" href="/Content/fancytree/skin-bootstrap/ui.fancytree.min.css" type="text/css" />


    <style>
        ul.projectList
        {
            margin-bottom: 15px;
            overflow-y: auto;
        }



        #@ViewDataTyped.ProjectLocationsMapInitJson.MapDivID
        {
            height: 700px;
        }

        .popover
        {
            max-width: 100%;
        }

        .mapCustomizations .dropdown-menu
        {
            font-size: 13px;
            background-color: white;
        }

        .mapCustomizationSingleSelect button
        {
            font-size: 13px;
            padding: 3px 18px 3px 5px !important;
        }

        .mapCustomizationMultiSelect button
        {
            font-size: 13px;
            padding: 3px 25px 3px 5px !important;
        }

        .bootstrap-select
        {
            padding: 0;
        }

        #projectLocationGroupTypeTree > tbody > tr.fancytree-active > td
        {
            background-color: transparent !important;
            color: initial !important;
        }

        table.fancytree-ext-table.fancytree-container > tbody > tr.fancytree-active > td span.fancytree-title
        {
            color: black;
        }

        span.fancytree-icon
        {
            visibility: hidden;
            max-width: 0;
            margin: 0;
        }

        span.fancytree-title
        {
            margin-left:0;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        span.fancytree-node
        {
            display: inline-block;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .dropdown-menu .text
         {
             max-width: 500px; 
             overflow: hidden;
             text-overflow: ellipsis;
        }

    </style>
}
@section RightOfPageTitle
{
    
    <a id="customUrlPopover" data-container="body" data-toggle="popover" data-trigger="click" data-placement="top" data-html="true" href="javascript:void(0)">
        <span class="glyphicon glyphicon-share"></span> Link to this filtered map
    </a>
}

    <div>
        @{ ViewPageContent.RenderPartialView(Html, ViewDataTyped.ViewPageContentViewData); }
    </div>

    <div class="mapCustomizations" style="display: inline-block; vertical-align: middle; margin-top: 10px">
        <span style="font-weight: bold">Filter @FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabelPluralized() by:</span>
        <select id="FilterPropertyName" name="FilterPropertyName" class="btn btn-sm mapCustomizationSingleSelect" data-width="auto" style="display:none">
            @{
                var displayGroup = -1;
                foreach (var plft in ViewDataTyped.ProjectLocationFilterTypesAndValues.Keys.OrderBy(p => p.DisplayGroup * p.SortOrder))
                {
                    if (displayGroup != -1 && displayGroup != plft.DisplayGroup)
                    {
                        <option data-divider="true"></option>
                    }
                    <option value="@plft.ProjectLocationFilterTypeNameWithIdentifier" data-filter="@plft.ProjectLocationFilterTypeName">
                        @plft.DisplayName
                    </option>
                    displayGroup = plft.DisplayGroup;
                }
            }
        </select>

        @foreach (var keyValuePair in ViewDataTyped.ProjectLocationFilterTypesAndValues)
        {
            @Html.DropDownList(keyValuePair.Key.ProjectLocationFilterTypeNameWithIdentifier, keyValuePair.Value,
            new { multiple = "", style = "display:none", @class = "btn-sm" })
        }

        <span style="font-weight: bold; margin-left: 10px;">Color @FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabelPluralized() by:</span>
        <select id="ColorPropertyName" class="btn btn-sm mapCustomizationSingleSelect" data-width="auto" style="display:none">
            @foreach (var colorByType in ViewDataTyped.ProjectColorByTypes)
            {
                <option value="@colorByType.ProjectColorByTypeNameWithIdentifier" data-colorby="@colorByType.ProjectColorByTypeName" data-displayname="@Html.LabelWithSugarFor(colorByType.GetDisplayNameFieldDefinition(), LabelWithSugarForExtensions.DisplayStyle.HelpIconOnly).ToString()">@colorByType.GetDisplayName()</option>
            }
        </select>
        <span id="ColorByHelpIcon">@Html.LabelWithSugarFor(ViewDataTyped.FieldDefinitionForInitialColorByType, LabelWithSugarForExtensions.DisplayStyle.HelpIconOnly, 400)</span>
    </div>

    <div >
        <div class="row" style="vertical-align: top;">
            <div class="col-md-12" id="mapPanel">
                @{ ProjectLocationsMap.RenderPartialView(Html, ViewDataTyped.ProjectLocationsMapViewData); }
            </div>
            <div id="projectsWithLocationAreaToast" style="display: none; padding: 8px 8px 8px 8px">
                <p>
                    @FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabelPluralized() listed here do not have a simple location, or location is private.
                </p>
                <div style="clear: both; white-space: nowrap; overflow-x: hidden; overflow-y: auto; max-height: 750px">
                    <table id="projectLocationGroupTypeTree" class="table table-hover table-condensed" style="margin-bottom: 10px">
                        <colgroup>
                            <col style="width: auto; text-overflow: ellipsis" />
                            <col style="width: 150px; text-align:right" />
                        </colgroup>
                        <thead>
                            <tr>
                                <th></th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <div id="showBasinwideProjectsToast">
        <a class="btn pull-right" title="@String.Format("{0} that are not represented by a point on the map are listed here.", FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabelPluralized())">
            <span class="glyphicon glyphicon-chevron-left"></span>Show @FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabelPluralized() with no Simple Location
        </a>
    </div>
    <div id="hideBasinwideProjectsToast" style="display: none">
        <a class="btn pull-right">
            Hide @FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabelPluralized() with no Simple Location<span class="glyphicon glyphicon-chevron-right"></span>
        </a>
    </div>
    <div style="margin-top: 10px">To zoom, hold down Shift and drag a rectangle.</div>

    <script type="text/javascript">
        function displayProjectsWithLocationArea(projectMapCustomization)
        {
            function renderFancyTreeColumns(event, data)
            {
                var node = data.node;
                var tr = jQuery(node.tr);
                var $tdList = tr.find(">td");

                var numberOfProjectsColumn = $tdList.eq(1);
                if (node.data.NumberOfProjects != null)
                {
                    numberOfProjectsColumn.text(node.data.NumberOfProjects);
                }
            }

            var glyph_opts = {
                map: {
                    expanderClosed: "glyphicon glyphicon-plus",
                    expanderOpen: "glyphicon glyphicon-minus" // glyphicon-collapse-down
                }
            };

            var treeDiv = jQuery("#projectLocationGroupTypeTree");
            treeDiv.fancytree({
                extensions: ["glyph", "table"],
                quicksearch: true,
                glyph: glyph_opts,
                table: {
                    nodeColumnIdx: 0,
                    indentation: 10
                },
                renderColumns: function(event, data)
                {
                    renderFancyTreeColumns(event, data);
                }
            }
            );
            var tree = treeDiv.fancytree("getTree");
            tree.reload(
            {
                type: "POST",
                url: @Html.Raw(ViewDataTyped.FilteredProjectsWithLocationAreasUrl.ToJS()),
                data: { projectMapCustomization: projectMapCustomization },
                dataType: "json"
            });
        };

        function updateCustomUrlPopover()
        {
            var filterPropertyNameDropdown = jQuery("#FilterPropertyName");
            var filterPropertyValueDropdown = jQuery("#" + filterPropertyNameDropdown.val());
            var colorPropertyNameDropdown = jQuery("#ColorPropertyName");

            var filteredUrl = "@ViewDataTyped.ProjectLocationsUrl" + "?@ProjectMapCustomization.FilterByQueryStringParameter=" + filterPropertyNameDropdown.find("option:selected").data("filter");

            var selectedValuesFromDropdown = filterPropertyValueDropdown.val();
            if (!Sitka.Methods.isUndefinedNullOrEmpty(selectedValuesFromDropdown))
            {
                if (selectedValuesFromDropdown.length != filterPropertyValueDropdown.find("option").length)
                {
                    var filterValues = selectedValuesFromDropdown.join(",");
                    filteredUrl += "&@ProjectMapCustomization.FilterValuesQueryStringParameter=" + filterValues;
                }
            }

            filteredUrl += "&@ProjectMapCustomization.ColorByQueryStringParameter=" + colorPropertyNameDropdown.find("option:selected").data("colorby");

            var width = filteredUrl.length * 6;
            var filterHtml = "<input id='filterHtmlInput' readonly='true' style='background-color: white; width:" + width + "px' type='url' value='" + filteredUrl + "' onclick='this.select()' />";

            var filteredUrlPopover = jQuery("#customUrlPopover");
            filteredUrlPopover.attr("data-content", filterHtml);
            jQuery(".popover-content").html(filterHtml);
        }

        function buildAndInitializeDropdowns(map, initialCustomization)
        {
            var colorPropertyNameDropdown = jQuery("#ColorPropertyName");
            colorPropertyNameDropdown.selectpicker();
            colorPropertyNameDropdown.selectpicker('val', initialCustomization.ColorByPropertyName);

            colorPropertyNameDropdown.on("change",function()
            {
                map.changePropertyToColorProjectLocationsBy(this.value);
                jQuery("#ColorByHelpIcon").html(colorPropertyNameDropdown.find("option:selected").data("displayname"));
                updateCustomUrlPopover();
            });

            var filterPropertyNameDropdown = jQuery("#FilterPropertyName");
            filterPropertyNameDropdown.selectpicker();
            filterPropertyNameDropdown.selectpicker('val', initialCustomization.FilterPropertyName);

            var filterPropertyNameOptions = jQuery("option[value]", filterPropertyNameDropdown);

            filterPropertyNameDropdown.on("change",function()
            {
                filterPropertyNameOptions.each(function(index, option)
                {
                    jQuery("#" + option.value).selectpicker('hide');
                });
                var filterPropertyValueDropdown = jQuery("#" + this.value);
                filterPropertyValueDropdown.selectpicker('show');
                filterPropertyValueDropdown.trigger("change");
            });

            filterPropertyNameOptions.each(function(index, option) {
                var filterPropertyNameSelected = option.value;
                if (!filterPropertyNameSelected) {
                    return;
                }
                var filterPropertyValueDropdown = jQuery("#" + filterPropertyNameSelected);

                // remove any trailing identifier (used for Classification filters)
                filterPropertyNameSelected = filterPropertyNameSelected.split("_")[0];

                filterPropertyValueDropdown.attr("data-selected-text-format", "count>1");
                filterPropertyValueDropdown.attr("data-count-selected-text", "{0} of {1} selected");
                filterPropertyValueDropdown.attr("data-actions-box", "true");
                filterPropertyValueDropdown.addClass("mapCustomizationMultiSelect");

                filterPropertyValueDropdown.selectpicker('hide');
                filterPropertyValueDropdown.selectpicker('selectAll');

                filterPropertyValueDropdown.on("change",function()
                {
                    var filterPropertyValueSelected = filterPropertyValueDropdown.val();

                    var actualFilter = [];
                    if (!Sitka.Methods.isUndefinedNullOrEmpty(filterPropertyValueSelected))
                    {
                        actualFilter = filterPropertyValueSelected;
                    }
                    map.changeFilter(filterPropertyNameSelected, actualFilter);
                    var filterObject = { FilterPropertyName: filterPropertyNameSelected, FilterPropertyValues: actualFilter };

                    displayProjectsWithLocationArea(filterObject);
                    updateCustomUrlPopover();
                });
            });

            var filterPropertyValueDropdown = jQuery("#" + initialCustomization.FilterPropertyName);
            filterPropertyValueDropdown.selectpicker('val', initialCustomization.FilterPropertyValues);
            filterPropertyValueDropdown.selectpicker('show');
            displayProjectsWithLocationArea(initialCustomization);
        }

        jQuery(function()
        {
            var projectLocationsMapInitJson = @Html.Raw(JObject.FromObject(ViewDataTyped.ProjectLocationsMapInitJson).ToString(Formatting.None)),
                projectFirmaMap = new ProjectFirmaMaps.Map(projectLocationsMapInitJson);
            projectFirmaMap.initializeProjectLocations(projectLocationsMapInitJson);

            projectFirmaMap.map.scrollWheelZoom.enable();

            buildAndInitializeDropdowns(projectFirmaMap, projectLocationsMapInitJson.ProjectMapCustomization);

            var clusterLocationsCheckbox = jQuery("#ClusterLocations");
            clusterLocationsCheckbox.on("change",function() { projectFirmaMap.changeClustering(clusterLocationsCheckbox.is(":checked")); });

            jQuery('#customUrlPopover').popover({
                container: "body",
                title: "URL of this filtered map<button id='btnClosePopover' class='btn btn-xs btn-primary pull-right' style='padding: 0 5px'>&times;</button>"
            });
            jQuery('#customUrlPopover').on('shown.bs.popover', function() {
                jQuery("#filterHtmlInput").select();
                var closePopoverButton = jQuery(".popover-title button#btnClosePopover");
                closePopoverButton.click(function (e) {
                    $('#customUrlPopover').popover('hide');
                });
            });

            updateCustomUrlPopover();

            jQuery('#showBasinwideProjectsToast').on("click",function()
            {
                jQuery("#mapPanel").removeClass("col-md-12");
                jQuery("#mapPanel").addClass("col-md-8");

                // add top margin to align with top of map
                var topMargin = jQuery(".mapLegendContainer").outerHeight() +
                    jQuery("#ClusterLocationsContainer").outerHeight();

                jQuery("#projectsWithLocationAreaToast").addClass("col-md-4");
                jQuery("#projectsWithLocationAreaToast").css("margin-top", topMargin);
                jQuery("#projectsWithLocationAreaToast").show();
                jQuery("#showBasinwideProjectsToast").hide();
                jQuery("#hideBasinwideProjectsToast").show();
                projectFirmaMap.map.invalidateSize();
            });

            jQuery('#hideBasinwideProjectsToast').on("click",function()
            {
                jQuery("#mapPanel").removeClass("col-md-8");
                jQuery("#mapPanel").addClass("col-md-12");

                jQuery("#projectsWithLocationAreaToast").removeClass("col-md-4");
                jQuery("#projectsWithLocationAreaToast").hide();
                jQuery("#showBasinwideProjectsToast").show();
                jQuery("#hideBasinwideProjectsToast").hide();
                projectFirmaMap.map.invalidateSize();
            });

            
        });
    </script>
