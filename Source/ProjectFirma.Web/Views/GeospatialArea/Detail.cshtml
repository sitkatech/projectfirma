@*-----------------------------------------------------------------------
<copyright file="Detail.cshtml" company="Tahoe Regional Planning Agency and Environmental Science Associates">
Copyright (c) Tahoe Regional Planning Agency and Environmental Science Associates. All rights reserved.
<author>Environmental Science Associates</author>
</copyright>

<license>
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

Source code is available upon request via <support@sitkatech.com>.
</license>
-----------------------------------------------------------------------*@
@using LtInfo.Common
@using ProjectFirma.Web.Views
@using ProjectFirma.Web.Views.Shared
@using LtInfo.Common.BootstrapWrappers
@using LtInfo.Common.AgGridWrappers
@using MoreLinq
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@using ProjectFirma.Web.Common
@using ProjectFirma.Web.Models
@using ProjectFirmaModels.Models
@using ProjectFirma.Web.Views.PerformanceMeasure
@inherits ProjectFirma.Web.Views.GeospatialArea.Detail

@section JavascriptAndStylesContent
{
    @{ AgGridIncludes.RenderPartialView(Html); }
    @{ MapJavascriptIncludes.RenderPartialView(Html); }
    
    <style>
        /* customizing the look of the clusters*/

        .marker-cluster-small
        {
            background-color: #9e9e9e;
            opacity: 0.7;
        }

        .marker-cluster-small div
        {
            background-color: #9e9e9e;
            opacity: 0.7;
        }

        .marker-cluster-medium
        {
            background-color: #6e6e6e;
            opacity: 0.7;
        }

        .marker-cluster-medium div
        {
            background-color: #6e6e6e;
            opacity: 0.7;
        }

        .marker-cluster-large
        {
            background-color: #3e3e3e;
            opacity: 0.7;
        }

        .marker-cluster-large div
        {
            background-color: #3e3e3e;
            opacity: 0.7;
        }

        .marker-cluster div
        {
            color: #e0ffff;
            font-weight: 900;
        }
    </style>
}

<script type="text/javascript">

    jQuery(function() {
        jQuery("#resultsTab").on("shown.bs.tab", function() {
            _.forOwn(window.GoogleCharts.chartWrappers,
                function (chartWrapper) {
                    if (jQuery('#' + chartWrapper.getContainerId()).is(':visible')) {
                        chartWrapper.getChart().clearChart();
                        chartWrapper.draw();
                    }
                });
        });
        jQuery("#overviewTab").on("shown.bs.tab", function () {
            _.forOwn(window.GoogleCharts.chartWrappers,
                function (chartWrapper) {
                    if (jQuery('#' + chartWrapper.getContainerId()).is(':visible')) {
                        chartWrapper.getChart().clearChart();
                        chartWrapper.draw();
                    }
                });
        });
    });
</script>

<div>
    <a class="btn backButton" href="@ViewDataTyped.IndexUrl">@BootstrapHtmlHelpers.MakeGlyphIcon("glyphicon-chevron-left") Back to all @ViewDataTyped.GeospatialAreaTypeNamePluralized </a>
</div>

<div>
    @{ ViewPageContent.RenderPartialView(Html, ViewDataTyped.GeospatialAreaDescriptionViewPageContentViewData); }
</div>
<div class="clearfix" style="padding-bottom: 15px"></div>

<div class="container-fluid">
    <div class="row">
        <ul class="nav nav-tabs" id="geospatialAreaDetailsTabs" style="border-bottom: none;">
            <li class="active">
                <a href="#geospatialAreaOverview" aria-controls="geospatialAreaOverview" role="tab" id="overviewTab" data-toggle="tab">Overview</a>
            </li>
            @if (MultiTenantHelpers.TrackAccomplishments())
            {
                <li>
                    <a href="#performanceMeasures" aria-controls="results" role="tab" data-toggle="tab" id="resultsTab">Accomplishments</a>
                </li>
            }
        </ul>
    </div>
</div>
<div class="panel panel-default">
    <div class="panel-body">
        <div class="tab-content">
            <div role="tabpanel" class="tab-pane active" id="geospatialAreaOverview">
                <div class="row">
                    <div class="@(MultiTenantHelpers.ReportFinancialsAtProjectLevel() ? "col-lg-5" : "col-xs-12")">
                        <div class="panel panelFirma">
                            <div class="panel-heading panelTitle">
                                <h2>Map</h2>
                            </div>
                            <div class="panel-body">
                                <p>
                                    This map displays the location of any @FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabelPluralized() and @FieldDefinitionEnum.Proposal.ToType().GetFieldDefinitionLabelPluralized() associated with this @ViewDataTyped.GeospatialAreaTypeName
                                </p>
                                <div style="font-weight: bold; margin-top: 10px">
                                    <input style="margin-right: 5px" type="checkbox" id="ClusterLocations" checked="checked" /><label>Cluster @FieldDefinitionEnum.ProjectLocation.ToType().GetFieldDefinitionLabelPluralized()</label>
                                </div>
                                <div id="@ViewDataTyped.MapInitJson.MapDivID" style="height: 320px; margin: 5px 0 5px 0">
                                </div>
                                <p style="font-size: 10px">To zoom, hold down Shift and drag a rectangle.</p>

                                <p>@FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabelPluralized() can be associated with multiple @ViewDataTyped.GeospatialAreaTypeNamePluralized, but are mapped in a single location. Therefore some @FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabelPluralized() may appear outside of the @ViewDataTyped.GeospatialAreaTypeName boundary.</p>
                            </div>
                        </div>
                    </div>
                    @if (MultiTenantHelpers.ReportFinancialsAtProjectLevel())
                    {
                        <div class="col-lg-7">
                            <div class="panel panelFirma">
                                <div class="panel-heading panelTitle">
                                    <h2>Expenditures by @FieldDefinitionEnum.OrganizationType.ToType().GetFieldDefinitionLabel()</h2>
                                </div>
                                <div class="panel-body">
                                    @if (ViewDataTyped.ViewGoogleChartViewData.HasData)
                                    {
                                        <div style="border-radius: 8px; background-color: white; margin-right: auto; margin-left: auto;">
                                            @{ ViewGoogleChart.RenderPartialView(Html, ViewDataTyped.ViewGoogleChartViewData); }
                                        </div>
                                        <p>@FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabelPluralized() can span multiple @ViewDataTyped.GeospatialAreaTypeNamePluralized, therefore the @FieldDefinitionEnum.ReportedExpenditure.ToType().GetFieldDefinitionLabelPluralized() shown here may also be accounted for in other @ViewDataTyped.GeospatialAreaTypeNamePluralized.</p>
                                    }
                                    else
                                    {
                                        <p class="systemText">No @FieldDefinitionEnum.ReportedExpenditure.ToType().GetFieldDefinitionLabel() data yet provided for this @ViewDataTyped.GeospatialAreaTypeName.</p>
                                    }
                                </div>
                            </div>
                        </div>
                    }

                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="panel panelFirma">
                            <div class="panel-heading panelTitle">
                                <h2>@FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabelPluralized()</h2>
                            </div>
                            <div class="panel-body">
                                @Html.AgGrid(ViewDataTyped.ProjectCustomDefaultGridSpec, ViewDataTyped.ProjectCustomDefaultGridName, ViewDataTyped.ProjectCustomDefaultGridDataUrl, "height:300px", AgGridResizeType.VerticalResizableHorizontalAutoFit)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            @if (MultiTenantHelpers.TrackAccomplishments())
            {
                <div role="tabpanel" class="tab-pane" id="performanceMeasures">

                    @if (ViewDataTyped.PerformanceMeasureChartViewDatas.Any())
                    {
                        <p>
                            The reported @FieldDefinitionEnum.PerformanceMeasure.ToType().GetFieldDefinitionLabel() results within this @ViewDataTyped.GeospatialAreaTypeName are charted here. Results are included for every @FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel() that is assigned to this @ViewDataTyped.GeospatialAreaTypeName. To see the full results for a @FieldDefinitionEnum.PerformanceMeasure.ToType().GetFieldDefinitionLabel(), click the @FieldDefinitionEnum.PerformanceMeasure.ToType().GetFieldDefinitionLabel() name in the chart title.
                        </p>
                        foreach (var batch in ViewDataTyped.PerformanceMeasureChartViewDatas.Batch(2))
                        {
                            <div class="row">
                                @foreach (var performanceMeasureChartViewData in batch)
                                {
                                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-6">
                                        <div class="panel panelFirma">
                                            <div class="panel-body">
                                                <div style="width: 500px; margin: auto;">
                                                    @{ PerformanceMeasureChart.RenderPartialView(Html, performanceMeasureChartViewData); }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                    }
                    else
                    {
                        <div class="row">
                            <div class="col-xs-12">
                                <p class="text-center">
                                    There are no @FieldDefinitionEnum.PerformanceMeasure.ToType().GetFieldDefinitionLabelPluralized() to report for this @ViewDataTyped.GeospatialAreaTypeName.
                                </p>
                            </div>
                        </div>
                    }

                </div>
            }

        </div>
    </div>
</div>

<script type="text/javascript">
    // we are extending ProjectFirma Maps here with functionality specific to this view. Similar to ProjectLocationMap.cshtml script.
    ProjectFirmaMaps.Map.prototype.initializeProjectLocations = function(mapInitJson)
    {
        // default to clustering
        this.areLocationsClustered = true;
        // set the project locations
        this.projectLocations = @Html.Raw(JObject.FromObject(ViewDataTyped.ProjectLocationsLayerGeoJson).ToString(Formatting.None));

        // draw the project locations
        this.addLocationLayers();
    };


    ProjectFirmaMaps.Map.prototype.changeClustering = function(areLocationsClustered)
    {
        this.areLocationsClustered = areLocationsClustered;
        this.addLocationLayers();
    };

    ProjectFirmaMaps.Map.prototype.addLocationLayers = function()
    {
        this.projectLocationsLayer = this.addProjectLocationsToMap(this.projectLocations, this.projectLocationsLayer, this.projectLocations.LayerName, true);
    }

    ProjectFirmaMaps.Map.prototype.addProjectLocationsToMap = function(points, layer, layerName, showByDefault)
    {
        var self = this;
        if (layer != null)
        {
            this.map.removeLayer(layer);
            this.layerControl.removeLayer(layer);
        }

        var markerClusterGroup = L.markerClusterGroup({ maxClusterRadius: 40 });
        var newLayer = L.geoJson(points.GeoJsonFeatureCollection, {
            pointToLayer: function(feature, latlng)
            {
                var featureColor = feature.properties.FeatureColor == null ? points.LayerColor : feature.properties.FeatureColor;
                var marker = L.marker(latlng, { icon: L.MakiMarkers.icon({ icon: "marker", color: featureColor, size: "s" }) });
                self.bindPopupToFeature(marker, feature);
                return marker;
            }
        });
        if (this.areLocationsClustered)
        {
            newLayer.addTo(markerClusterGroup);
            layer = markerClusterGroup;
        }
        else
        {
            layer = newLayer;
        }

        if (showByDefault)
        {
            layer.addTo(this.map);
        }

        this.layerControl.addOverlay(layer, layerName);

        return layer;
    };

    jQuery(function()
    {
        var mapInitJson = @Html.Raw(JObject.FromObject(ViewDataTyped.MapInitJson).ToString(Formatting.None));
        var map = new ProjectFirmaMaps.Map(mapInitJson);
        map.initializeProjectLocations(mapInitJson);

        var clusterLocationsCheckbox = jQuery("#ClusterLocations");
        clusterLocationsCheckbox.on("change",function() { map.changeClustering(clusterLocationsCheckbox.is(":checked")); });

        jQuery("#overviewTab").on("shown.bs.tab", function() {
            map.map.invalidateSize();
        });
    });
</script>
