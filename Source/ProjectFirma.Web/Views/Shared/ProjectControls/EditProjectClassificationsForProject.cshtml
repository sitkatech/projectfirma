@*-----------------------------------------------------------------------
    <copyright file="EditProjectClassificationsForProject.cshtml" company="Tahoe Regional Planning Agency and Environmental Science Associates">
    Copyright (c) Tahoe Regional Planning Agency and Environmental Science Associates. All rights reserved.
    <author>Environmental Science Associates</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@
@using ProjectFirmaModels.Models
@using LtInfo.Common.HtmlHelperExtensions
@using ProjectFirma.Web.Common
@using ProjectFirma.Web.Models
@inherits ProjectFirma.Web.Views.Shared.ProjectControls.EditProjectClassificationsForProject

<div class="validationError">
    @Html.ValidationSummary()
</div>

<style>
    .charactersRemainingText {
        font-size: 10px;
    }
    .help-block {
        font-size: 11px;
    }
</style>

@using (Html.BeginForm())
{
<div>
    Click the checkboxes below to associate this @FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel() with one or more @Html.LabelWithSugarFor(ViewDataTyped.ClassificationSystem)<sup><span class="requiredFieldIcon glyphicon glyphicon-flash" style="color: #800020; font-size: 8px; "></span></sup>.
</div>
    <div>
            @{ var classificationIndex = 0;}
            @foreach (var classification in ViewDataTyped.ClassificationSystem.Classifications.OrderBy(x => x.GetSortOrder()).ThenBy(x => x.GetDisplayName()).ToList())
            {
                <div class="row" style="padding-top:20px">
                    <div class="col-xs-12 col-sm-4">
                        <label>
                            @Html.CheckBoxFor(x => x.ProjectClassificationSimples[classificationIndex].Selected)
                            <span style="font-weight: bold">@classification.GetDisplayName()</span>
                        </label>
                        <div class="help-block">
                            @classification.ClassificationDescription
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-8">
                        <div>
                            @Html.TextAreaWithMaxLengthFor(x => x.ProjectClassificationSimples[classificationIndex].ProjectClassificationNotesForBinding, new TextAreaForExtensions.TextAreaDimensions(null, 3), string.Format("Select the {0} and describe how it applies to the {1}.", ViewDataTyped.ClassificationSystem.ClassificationSystemName, FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel()), new List<string> { "form-control" })
                        </div>
                        @Html.HiddenFor(x => x.ProjectClassificationSimples[classificationIndex].ClassificationID)
                        @Html.HiddenFor(x => x.ProjectClassificationSimples[classificationIndex].ClassificationSystemID)
                    </div>
                </div>
                classificationIndex = classificationIndex + 1;
            }
            <hr />
    </div>

    @Html.HiddenFor(m => m.IsClassificationSystemRequired)

    <div id="bottomOfForm"></div>
}

<script type="text/javascript">
    // <![CDATA[

    jQuery(function() {
        @for (var i = 0; i < ViewDataTyped.ClassificationSystem.Classifications.OrderBy(y => y.GetDisplayName()).ToList().Count; i++)
        {
            <text>
        var checkBox = jQuery("#@Html.IdFor(x => x.ProjectClassificationSimples[i].Selected)");
        var notesTextArea = jQuery("#@Html.IdFor(x => x.ProjectClassificationSimples[i].ProjectClassificationNotesForBinding)");
        var charactersRemaining = jQuery("#CharactersRemaining_@(Html.IdFor(x => x.ProjectClassificationSimples[i].ProjectClassificationNotesForBinding))");

        //Set default display
        if (checkBox.prop("checked")) {
            notesTextArea.css("background-color", "");
            notesTextArea.attr("disabled", false);
            notesTextArea.attr("disabled", false);
            charactersRemaining.css("display", "");
        }
        else {
            notesTextArea.css("background-color", "#EEEEEE");
            notesTextArea.attr("disabled", "disabled");
            charactersRemaining.css("display", "none");
        }

        //Create on-change event
        jQuery(checkBox).on("change",function () {
            var notesTextAreaForCheckboxFunction = jQuery("#@Html.IdFor(x => x.ProjectClassificationSimples[i].ProjectClassificationNotesForBinding)");
            var charactersRemainingFunction =
                jQuery("#CharactersRemaining_@(Html.IdFor(x => x.ProjectClassificationSimples[i].ProjectClassificationNotesForBinding))");

            if (this.checked) {
                notesTextAreaForCheckboxFunction.css("background-color", "");
                notesTextAreaForCheckboxFunction.attr("disabled", false);
                charactersRemainingFunction.css("display", "");
            }
            else {
                notesTextAreaForCheckboxFunction.css("background-color", "#EEEEEE");
                notesTextAreaForCheckboxFunction.attr("disabled", "disabled");
                charactersRemainingFunction.css("display", "none");
            }
        });
        </text>
        }

        HookupCheckIfFormIsDirty();
    });

    function saveForm() {
        var form = jQuery("form");
        // Do not submit if the form
        // does not pass client side validation

        if (!form.valid()) {
            return false;
        }

        form.submit();
    }

    // ]]>
</script>
