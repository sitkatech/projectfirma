@*-----------------------------------------------------------------------
    <copyright file="Detail.cshtml" company="Tahoe Regional Planning Agency and Sitka Technology Group">
    Copyright (c) Tahoe Regional Planning Agency and Sitka Technology Group. All rights reserved.
    <author>Sitka Technology Group</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@
@using LtInfo.Common
@using ProjectFirmaModels.Models
@using ProjectFirma.Web.Security
@using ProjectFirma.Web.Views
@using ProjectFirma.Web.Views.Shared
@using LtInfo.Common.BootstrapWrappers
@using LtInfo.Common.DhtmlWrappers
@using LtInfo.Common.HtmlHelperExtensions
@using LtInfo.Common.ModalDialog
@using MoreLinq
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@using ProjectFirma.Web.Common
@using ProjectFirma.Web.Models
@using ProjectFirma.Web.Views.PerformanceMeasure
@inherits ProjectFirma.Web.Views.Organization.Detail

@section JavascriptAndStylesContent
{
    @{ DhtmlxGridIncludes.RenderPartialView(Html); }
    @{ MapJavascriptIncludes.RenderPartialView(Html); }
    <script src="@Url.Content("~/Content/leaflet/leaflet.legend/leaflet-legend.js")" type="text/javascript"></script>
    <link href="@Url.Content("~/Content/leaflet/leaflet.legend/leaflet-legend.css")" rel="stylesheet" type="text/css" />
    <script type="text/javascript">

    jQuery(function () {
        jQuery("#overviewTab").on("shown.bs.tab", function () {
            var gridName1 = @(ViewDataTyped.ProjectOrganizationsGridName.ToJS().ToHTMLFormattedString());
            Sitka[gridName1].resizeGridWidths();
            var gridName2 = @(ViewDataTyped.ProjectFundingSourceExpendituresForOrganizationGridName.ToJS().ToHTMLFormattedString());
            Sitka[gridName2].resizeGridWidths();
            _.forOwn(window.GoogleCharts.chartWrappers,
                function (chartWrapper) {
                    if (jQuery('#' + chartWrapper.getContainerId()).is(':visible')) {
                        chartWrapper.getChart().clearChart();
                        chartWrapper.draw();
                    }
                });
        });
        jQuery("#accomplishmentsTab").on("shown.bs.tab", function () {
            var gridName1 = @(ViewDataTyped.ProjectOrganizationsGridName.ToJS().ToHTMLFormattedString());
            Sitka[gridName1].resizeGridWidths();
            var gridName2 = @(ViewDataTyped.ProjectFundingSourceExpendituresForOrganizationGridName.ToJS().ToHTMLFormattedString());
            Sitka[gridName2].resizeGridWidths();
            _.forOwn(window.GoogleCharts.chartWrappers,
                function (chartWrapper) {
                    if (jQuery('#' + chartWrapper.getContainerId()).is(':visible')) {
                        chartWrapper.getChart().clearChart();
                        chartWrapper.draw();
                    }
                });
        });
        jQuery("#expendituresTab").on("shown.bs.tab", function() {
            var gridName1 = @(ViewDataTyped.ProjectOrganizationsGridName.ToJS().ToHTMLFormattedString());
            Sitka[gridName1].resizeGridWidths();
            var gridName2 = @(ViewDataTyped.ProjectFundingSourceExpendituresForOrganizationGridName.ToJS().ToHTMLFormattedString());
            Sitka[gridName2].resizeGridWidths();
            _.forOwn(window.GoogleCharts.chartWrappers,
                function (chartWrapper) {
                    if (jQuery('#' + chartWrapper.getContainerId()).is(':visible')) {
                        chartWrapper.getChart().clearChart();
                        chartWrapper.draw();
                    }
                });
        });
    });
    </script>
}

<div>
    <a class="btn backButton" href="@ViewDataTyped.IndexUrl">@BootstrapHtmlHelpers.MakeGlyphIcon("glyphicon-chevron-left") Back to all @FieldDefinitionEnum.Organization.ToType().GetFieldDefinitionLabelPluralized()</a>
</div>

<div class="container-fluid">
    <div class="row">
        <ul class="nav nav-tabs" id="organizationDetailsTabs" style="border-bottom: none;">
            <li class="active">
                <a href="#organizationOverview" aria-controls="organizationOverview" role="tab" data-toggle="tab" id="overviewTab">Overview</a>
            </li>
            <li>
                <a href="#expenditures" aria-controls="fundingAndProjects" role="tab" data-toggle="tab" id="expendituresTab">Expenditures</a>
            </li>
            <li>
                <a href="#accomplishments" aria-controls="results" role="tab" data-toggle="tab" id="accomplishmentsTab">Accomplishments</a>
            </li>
        </ul>
    </div>
</div>
<div class="panel panel-default">
    <div class="panel-body">
        <div class="tab-content">
            <div role="tabpanel" class="tab-pane active" id="organizationOverview">
                <div class="row">
                    <div class="col-md-6">
                        <div class="panel panelFirma">
                            <div class="panel-heading panelTitle">
                                @ModalDialogFormHelper.MakeEditIconLink(ViewDataTyped.EditOrganizationUrl, string.Format("Edit {0} - {1}", FieldDefinitionEnum.Organization.ToType().GetFieldDefinitionLabel(), ViewDataTyped.Organization.GetDisplayName()), ViewDataTyped.UserHasOrganizationManagePermissions) 
                                Basics
                            </div>
                            <div class="panel-body">
                                <div class="row">
                                    @if (ViewDataTyped.Organization.LogoFileResourceInfo != null)
                                    {
                                        <div class="col-xs-1">
                                            <div style="text-align: center;">
                                                <img src="@ViewDataTyped.Organization.LogoFileResourceInfo.GetFileResourceUrl()" style="max-width: 100px; max-height: 200px; margin-left: auto; margin-right: auto;" />
                                            </div>
                                        </div>
                                    }

                                    <div class="@ViewDataTyped.Organization.LogoFileResourceInfo != null ? col-xs-11 : col-xs-12">
                                        <div class="row">
                                            <div class="col-xs-6 fieldLabel text-right">@Html.Label("Name")</div>
                                            <div class="col-xs-6">@ViewDataTyped.Organization.OrganizationName</div>
                                        </div>
                                        <div class="row">
                                            <div class="col-xs-6 fieldLabel text-right">@Html.Label("Short Name")</div>
                                            <div class="col-xs-6">@ViewDataTyped.Organization.OrganizationShortName</div>
                                        </div>
                                        <div class="row">
                                            <div class="col-xs-6 fieldLabel text-right">@Html.Label("Home Page")</div>
                                            <div class="col-xs-6">
                                                <a class="wrapLongString" href="@ViewDataTyped.Organization.OrganizationUrl">@ViewDataTyped.Organization.OrganizationUrl</a>
                                            </div>
                                        </div>
                                        <hr/>
                                        <div class="row">
                                            <div class="col-xs-6 fieldLabel text-right">@Html.LabelWithSugarFor(FieldDefinitionEnum.OrganizationType.ToType())</div>
                                            <div class="col-xs-6">@(ViewDataTyped.Organization.OrganizationType != null ? ViewDataTyped.Organization.OrganizationType.OrganizationTypeName : string.Empty)</div>
                                        </div>
                                        <div class="row">
                                            <div class="col-xs-6 fieldLabel text-right">@Html.LabelWithSugarFor(FieldDefinitionEnum.OrganizationPrimaryContact.ToType())</div>
                                            <div class="col-xs-6">
                                                @if (ViewDataTyped.UserHasOrganizationManagePrimaryContactPermissions)
                                                {
                                                    <span style="margin-right: 5px">@ModalDialogFormHelper.MakeEditIconLink(ViewDataTyped.EditOrganizationPrimaryContactUrl, string.Format("Edit {0} for {1}", FieldDefinitionEnum.OrganizationPrimaryContact.ToType().FieldDefinitionDisplayName, ViewDataTyped.Organization.OrganizationName), 800, ViewDataTyped.UserHasOrganizationManagePrimaryContactPermissions)</span>
                                                }
                                                @(new UserViewFeature().HasPermission(ViewDataTyped.CurrentFirmaSession, ViewDataTyped.Organization.PrimaryContactPerson).HasPermission ? ViewDataTyped.Organization.GetPrimaryContactPersonWithOrgAsUrl() : ViewDataTyped.Organization.GetPrimaryContactPersonAsStringAndOrgAsUrl())
                                            </div>
                                        </div>
                                        @if (ViewDataTyped.Organization.ShortDescription != null)
                                        {
                                            <div class="row">
                                                <div class="col-xs-6 fieldLabel text-right">@Html.Label("Description")</div>
                                                <div class="col-xs-6">
                                                    @ViewDataTyped.Organization.ShortDescriptionHtmlString
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="panel panelFirma">
                            <div class="panel-heading panelTitle">
                                @Html.LabelWithSugarFor(FieldDefinitionEnum.FundingSource.ToType(), LabelWithSugarForExtensions.DisplayStyle.HelpIconOnly)
                                <a href="@ViewDataTyped.ManageFundingSourcesUrl">@FieldDefinitionEnum.FundingSource.ToType().GetFieldDefinitionLabelPluralized()</a>

                                <span class="pull-right">
                                    @ModalDialogFormHelper.ModalDialogFormLink(BootstrapHtmlHelpers.MakeGlyphIcon("glyphicon-plus").ToString(), ViewDataTyped.NewFundingSourceUrl, string.Format("Create a new {0}", FieldDefinitionEnum.FundingSource.ToType().GetFieldDefinitionLabel()), new List<string>(), ViewDataTyped.CanCreateNewFundingSource)
                                </span>
                            </div>
                            <div class="panel-body">
                                @if (ViewDataTyped.Organization.FundingSources.Any())
                                {
                                    <ul>
                                        @foreach (var fundingSource in ViewDataTyped.Organization.FundingSources.OrderBy(x => x.FundingSourceName))
                                        {
                                            <li>
                                                @fundingSource.GetDisplayNameAsUrl()
                                            </li>
                                        }
                                    </ul>
                                }
                                else
                                {
                                    <p class="systemText">No @FieldDefinitionEnum.FundingSource.ToType().GetFieldDefinitionLabelPluralized() set for this @(FieldDefinitionEnum.Organization.ToType().GetFieldDefinitionLabel()).</p>
                                }
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="panel panelFirma">
                            <div class="panel-heading panelTitle">
                                @FieldDefinitionEnum.ProjectLocation.ToType().GetFieldDefinitionLabelPluralized() and Boundary
                            </div>
                            <div class="panel-body">
                                <div class="row">
                                    <div class="col-xs-12">
                                        <div class="pull-right">
                                            @if (ViewDataTyped.UserHasOrganizationManagePermissions)
                                            {
                                                <a href="@ViewDataTyped.EditBoundaryUrl" title="Edit Organization Boundary" class="btn btn-firma">
                                                    @BootstrapHtmlHelpers.MakeGlyphIcon("glyphicon-edit blue")
                                                    Edit Boundary
                                                </a>
                                                if (ViewDataTyped.Organization.OrganizationBoundary != null)
                                                {
                                                    @ModalDialogFormHelper.MakeDeleteLink(string.Format("{0} Delete Boundary", BootstrapHtmlHelpers.MakeGlyphIcon("glyphicon-trash")), ViewDataTyped.DeleteOrganizationBoundaryUrl, new List<string> { "btn", "btn-firma" }, ViewDataTyped.UserHasOrganizationManagePermissions)
                                                }
                                            }
                                        </div>
                                        @if (ViewDataTyped.HasSpatialData)
                                        {
                                            <p>
                                                The map displays the @FieldDefinitionEnum.Organization.ToType().GetFieldDefinitionLabel() boundary, and the locations of any active @FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabelPluralized() and @FieldDefinitionEnum.Proposal.ToType().GetFieldDefinitionLabelPluralized() that have spatial data.
                                            </p>
                                        }
                                        else
                                        {
                                            <p class="systemText">No spatial data associated with this @(FieldDefinitionEnum.Organization.ToType().GetFieldDefinitionLabel()).</p>
                                        }
                                    </div>
                                    <div class="col-xs-12">
                                        @if (ViewDataTyped.HasSpatialData)
                                        {
                                            <div id="@ViewDataTyped.MapInitJson.MapDivID" style="height: 600px; margin: 5px 0 5px 0">
                                            </div>
                                            <span class="alert" style="font-size: 12px">To zoom, hold down Shift and drag a rectangle.</span>
                                            <script type="text/javascript">
                                                jQuery(document).ready(function() {
                                                    var mapInitJson =
                                                        @Html.Raw(JObject.FromObject(ViewDataTyped.MapInitJson).ToString(Formatting.None));
                                                    var map = new ProjectFirmaMaps.Map(mapInitJson);

                                                    jQuery("#overviewTab").on("shown.bs.tab", function() {
                                                        map.map.invalidateSize();
                                                    });

                                                });
                                            </script>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <div class="panel panelFirma">
                            <div class="panel-heading panelTitle">
                                @FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabelPluralized()
                            </div>
                            <div class="panel-body">
                                <p>
                                    @ViewDataTyped.Organization.OrganizationName is:
                                </p>
                                <ul>
                                    @if (ViewDataTyped.TenantHasCanStewardProjectsOrganizationRelationship)
                                    {
                                        <li>
                                            the <strong>@FieldDefinitionEnum.ProjectsStewardOrganizationRelationshipToProject.ToType().GetFieldDefinitionLabel()</strong> for
                                            <strong>@ViewDataTyped.NumberOfStewardedProjects</strong>
                                            @(ViewDataTyped.NumberOfStewardedProjects == 1 ? FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel() : FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabelPluralized())
                                        </li>
                                    }
                                    <li>
                                        the <strong>Lead Implementer</strong> for
                                        <strong>@ViewDataTyped.NumberOfLeadImplementedProjects</strong>
                                        @(ViewDataTyped.NumberOfLeadImplementedProjects == 1 ? FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel() : FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabelPluralized())
                                    </li>
                                    <li>
                                        a contributor to
                                        <strong>@ViewDataTyped.NumberOfProjectsContributedTo</strong>
                                        @(ViewDataTyped.NumberOfProjectsContributedTo == 1 ? FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel() : FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabelPluralized())
                                    </li>
                                </ul>
                                @Html.DhtmlxGrid(ViewDataTyped.ProjectsIncludingLeadImplementingGridSpec, ViewDataTyped.ProjectOrganizationsGridName, ViewDataTyped.ProjectOrganizationsGridDataUrl, "height:300px", DhtmlxGridResizeType.VerticalResizableHorizontalAutoFit)
                            </div>
                        </div>
                    </div>
                </div>
                @if (ViewDataTyped.ShowProposals)
                {
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="panel panelFirma">
                                <div class="panel-heading panelTitle">
                                    @ViewDataTyped.ProposalsPanelHeader
                                </div>
                                <div class="panel-body">
                                    <p></p>
                                    @Html.DhtmlxGrid(ViewDataTyped.ProposalsGridSpec, ViewDataTyped.ProposalsGridName, ViewDataTyped.ProposalsGridDataUrl, "height:300px", DhtmlxGridResizeType.VerticalResizableHorizontalAutoFit)
                                </div>
                            </div>
                        </div>
                    </div>
                }
                @if (ViewDataTyped.ShowPendingProjects)
                {
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="panel panelFirma">
                                <div class="panel-heading panelTitle">
                                    Pending @FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabelPluralized() (Not Visible to the Public)
                                </div>
                                <div class="panel-body">
                                    <p></p>
                                    @Html.DhtmlxGrid(ViewDataTyped.PendingProjectsGridSpec, ViewDataTyped.PendingProjectsGridName, ViewDataTyped.PendingProjectsGridDataUrl, "height:300px", DhtmlxGridResizeType.VerticalResizableHorizontalAutoFit)
                                </div>
                            </div>
                        </div>
                    </div>
                }

                <div class="row">
                    <div class="col-sm-12">
                        <div class="panel panelFirma">
                            <div class="panel-heading panelTitle">
                                Users
                            </div>
                            <div class="panel-body">
                                @if (ViewDataTyped.Organization.People.Any())
                                {
                                    <ul>
                                        @foreach (var person in ViewDataTyped.Organization.People.Where(x => x.IsActive).OrderBy(x => x.GetFullNameLastFirst()))
                                        {
                                            if (new UserViewFeature().HasPermission(ViewDataTyped.CurrentFirmaSession, person).HasPermission)
                                            {
                                                <li>
                                                    @person.GetFullNameFirstLastAsUrl()
                                                </li>
                                            }
                                            else
                                            {
                                                <li>
                                                    @person.GetFullNameFirstLast()
                                                </li>
                                            }
                                        }
                                    </ul>
                                }
                                else
                                {
                                    <p class="systemText">No Users belong to this @(FieldDefinitionEnum.Organization.ToType().GetFieldDefinitionLabel()).</p>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div role="tabpanel" class="tab-pane" id="expenditures">
                <div class="row" style="margin-bottom: 20px">
                    <div class="col-xs-12">
                        <p>@FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel() @FieldDefinitionEnum.ReportedExpenditure.ToType().GetFieldDefinitionLabelPluralized() associated with this @FieldDefinitionEnum.Organization.ToType().GetFieldDefinitionLabel() are presented in several ways:</p>
                        <ul>
                            <li>The <strong>Expenditures Provided Directly by this @FieldDefinitionEnum.Organization.ToType().GetFieldDefinitionLabel()</strong> chart shows all @FieldDefinitionEnum.ReportedExpenditure.ToType().GetFieldDefinitionLabelPluralized() that originate with @FieldDefinitionEnum.FundingSource.ToType().GetFieldDefinitionLabelPluralized() owned by this @FieldDefinitionEnum.Organization.ToType().GetFieldDefinitionLabel()</li>
                            <li>
                                The <strong>Expenditures Received from other @FieldDefinitionEnum.Organization.ToType().GetFieldDefinitionLabelPluralized()</strong> chart shows @FieldDefinitionEnum.ReportedExpenditure.ToType().GetFieldDefinitionLabelPluralized() received from other
                                @FieldDefinitionEnum.Organization.ToType().GetFieldDefinitionLabelPluralized() for all @FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabelPluralized() where this @FieldDefinitionEnum.Organization.ToType().GetFieldDefinitionLabel() is the
                                @FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel() @ViewDataTyped.ProjectStewardOrLeadImplementorFieldDefinitionName
                            </li>
                            <li>The <strong>@FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel() @FieldDefinitionEnum.ReportedExpenditure.ToType().GetFieldDefinitionLabelPluralized()</strong> table at the bottom of the page provides a list of all @FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel() @FieldDefinitionEnum.ReportedExpenditure.ToType().GetFieldDefinitionLabelPluralized() for which this @FieldDefinitionEnum.Organization.ToType().GetFieldDefinitionLabel() provided or received funding, and the annual expenditure amounts</li>
                        </ul>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="panel panelFirma">
                            <div class="panel-heading panelTitle">
                                Provided Directly by this @FieldDefinitionEnum.Organization.ToType().GetFieldDefinitionLabel()
                            </div>
                            <div class="panel-body">
                                <div>
                                    @if (ViewDataTyped.ExpendituresDirectlyFromOrganizationViewGoogleChartViewData.HasData)
                                    {
                                        ViewGoogleChart.RenderPartialView(Html, ViewDataTyped.ExpendituresDirectlyFromOrganizationViewGoogleChartViewData);
                                    }
                                    else
                                    {
                                        <p class="systemText">No expenditure data available</p>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="panel panelFirma">
                            <div class="panel-heading panelTitle">
                                Received from Other @FieldDefinitionEnum.Organization.ToType().GetFieldDefinitionLabelPluralized()
                            </div>
                            <div class="panel-body">
                                <div>
                                    @if (ViewDataTyped.ExpendituresReceivedFromOtherOrganizationsViewGoogleChartViewData.HasData)
                                    {
                                        ViewGoogleChart.RenderPartialView(Html, ViewDataTyped.ExpendituresReceivedFromOtherOrganizationsViewGoogleChartViewData);
                                    }
                                    else
                                    {
                                        <p class="systemText">No expenditure data available.</p>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <div class="panel panelFirma">
                            <div class="panel-heading panelTitle">
                                @FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel() @FieldDefinitionEnum.ReportedExpenditure.ToType().GetFieldDefinitionLabelPluralized()
                            </div>
                            <div class="panel-body">
                                @Html.DhtmlxGrid(ViewDataTyped.ProjectFundingSourceExpendituresForOrganizationGridSpec, ViewDataTyped.ProjectFundingSourceExpendituresForOrganizationGridName, ViewDataTyped.ProjectFundingSourceExpendituresForOrganizationGridDataUrl, "height:300px", DhtmlxGridResizeType.VerticalResizableHorizontalAutoFit)
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div role="tabpanel" class="tab-pane" id="accomplishments">
                @if (ViewDataTyped.PerformanceMeasureChartViewDatas.Any())
                {
                    <p>
                        The reported @MultiTenantHelpers.GetPerformanceMeasureName() results within this @FieldDefinitionEnum.Organization.ToType().GetFieldDefinitionLabel() are charted here. Results are included for every @FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel() that is assigned to this @(FieldDefinitionEnum.Organization.ToType().GetFieldDefinitionLabel()). To see the full results for a @MultiTenantHelpers.GetPerformanceMeasureName(), click the @MultiTenantHelpers.GetPerformanceMeasureName() name in the chart title.
                    </p>
                    foreach (var batch in ViewDataTyped.PerformanceMeasureChartViewDatas.Batch(2))
                    {
                        <div class="row">
                            @foreach (var performanceMeasureChartViewData in batch)
                            {
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-6">
                                    <div class="panel panelFirma">
                                        <div class="panel-body">
                                            <div style="margin: auto;">
                                                @{ PerformanceMeasureChart.RenderPartialView(Html, performanceMeasureChartViewData); }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                }
                else
                {
                    <div class="row">
                        <div class="col-xs-12">
                            <p class="systemText">
                                There are no @FieldDefinitionEnum.PerformanceMeasure.ToType().GetFieldDefinitionLabelPluralized() to report for this @(FieldDefinitionEnum.Organization.ToType().GetFieldDefinitionLabel()).
                            </p>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
